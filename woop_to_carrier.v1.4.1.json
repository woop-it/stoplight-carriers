{
  "openapi": "3.0.2",
  "info": {
    "title": "Woop to Carrier",
    "description": "This document contains the technical information about Woop APIs for carriers. For any questions or clarification, please contact the internal technical team.\n\nTo use \"Carrier to Woop\" APIs, you must use the confidential access codes provided when you created your carrier account on the platform.\n\nThe version currently available in the documentation is **Version 1.4.0**",
    "version": "1.4.0"
  },
  "paths": {
    "/quotes": {
      "post": {
        "tags": [
          "Devis"
        ],
        "description": "This method is used to receive requests for quotes. If the quote is validated, the information transmitted will be used to create the delivery order using POST/deliveries. ",
        "operationId": "postQuote",
        "requestBody": {
          "required": true,
          "description": "Contains the information needed to create a delivery quote. ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postQuote"
              },
              "examples": {
                "Exemple par d√©faut": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Enseigne A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Magasin C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "address": {
                        "addressLine1": "179 Boulevard de Turin",
                        "addressLine2": "",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "Travaux sur le boulevard.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "addressLine2": "Euratech - EuraTechnologies",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 121.8,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 77.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 55,
                          "unit": "cm"
                        },
                        "weight": {
                          "value": 33.4,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Produit label 1",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Exemple avec le prix des produits": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Enseigne A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Magasin C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "address": {
                        "addressLine1": "179 Boulevard de Turin",
                        "addressLine2": "",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "Travaux sur le boulevard.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "addressLine2": "Euratech - EuraTechnologies",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 121.8,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 77.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 55,
                          "unit": "cm"
                        },
                        "weight": {
                          "value": 33.4,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Produit label 1",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM",
                      "SERVICE_ASSEMBLY"
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currency": "EUR"
                    }
                  }
                },
                "Exemple avec tags": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Enseigne A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Magasin C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "address": {
                        "addressLine1": "179 Boulevard de Turin",
                        "addressLine2": "",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "Travaux sur le boulevard.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "addressLine2": "Euratech - EuraTechnologies",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 121.8,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 77.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 55,
                          "unit": "cm"
                        },
                        "weight": {
                          "value": 33.4,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Produit label 1",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ]
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success code, the quotes have been generated for the order. All carriers contacted have a quote ID to accept a delivery.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of quotes",
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": [
                      {
                        "quoteId": "4zd5z4d5zd",
                        "price": {
                          "value": 135.56,
                          "currency": "EUR"
                        },
                        "vehicleType": "VEHICLE_TYPE_BIKE"
                      }
                    ]
                  }
                }
              }
            }
          },
          "202": {
            "description": "The carrier is unable to process the request for technical or functional reasons, and indicates this with a standard refusal reason and a precise comment.\n\n[See the refusal reasons](https://woop.stoplight.io/docs/carrier/docs/Mod%C3%A8les/Motifs-de-refus.md)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "reasons"
                  ],
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/refusedReason"
                      }
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "REFUSED_TOO_HEAVY"
                      ],
                      "comment": "It's too heavy!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Demande de devis"
      }
    },
    "/quotes/{quoteId}": {
      "delete": {
        "tags": [
          "Devis"
        ],
        "description": "Use this method to receive requests to cancel a quote.",
        "operationId": "deleteQuote",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathQuoteId"
          }
        ],
        "responses": {
          "204": {
            "description": "Quote successfully cancelled"
          },
          "403": {
            "description": "The quote cannot/can no longer be cancelled"
          },
          "404": {
            "description": "The quote identifier 'quoteId' does not exist"
          }
        },
        "summary": "Annulation d'un devis"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "quoteId",
          "in": "path",
          "required": true,
          "description": "Quote number"
        }
      ]
    },
    "/deliveries": {
      "post": {
        "operationId": "postDelivery",
        "description": "This method allows you to validate a quote and receive the delivery order. In response, it provides additional information about the delivery.",
        "requestBody": {
          "required": true,
          "description": "Contains the information required to create a delivery request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postDelivery"
              },
              "examples": {
                "Exemple par d√©faut": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "quoteId": "4zd5z4d5zd",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Enseigne A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Magasin C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr"
                      },
                      "address": {
                        "addressLine1": "237 rue du Ballon",
                        "addressLine2": "Niji",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "Travaux en ce moment attention.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr",
                        "language": "fr-FR",
                        "timezone": "Europe/Paris"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 35.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.25,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 12.35,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Armoire",
                            "quantity": 1
                          }
                        ],
                        "references": [
                          "1234A"
                        ],
                        "quantity": 1
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Exemple avec le prix des produits": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "quoteId": "4zd5z4d5zd",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Enseigne A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Magasin C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr"
                      },
                      "address": {
                        "addressLine1": "237 rue du Ballon",
                        "addressLine2": "Niji",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "Travaux en ce moment attention.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 35.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.25,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 12.35,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Armoire",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM",
                      "SERVICE_ASSEMBLY"
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currency": "EUR"
                    }
                  }
                },
                "Exemple avec tags": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "quoteId": "4zd5z4d5zd",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Enseigne A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Magasin C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr"
                      },
                      "address": {
                        "addressLine1": "237 rue du Ballon",
                        "addressLine2": "Niji",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "Travaux en ce moment attention.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr",
                        "language": "fr-FR",
                        "timezone": "Europe/Paris"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 35.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.25,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 12.35,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Armoire",
                            "quantity": 1
                          }
                        ],
                        "references": [
                          "1234A"
                        ],
                        "quantity": 1
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The delivery is accepted, a 'deliveryId' is returned, additionally a table of 'package' ids can be returned if tracking by package. A table of labels can also be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deliveryCreated"
                },
                "examples": {
                  "Exemple par d√©faut": {
                    "value": {
                      "deliveryId": "5q4f5q4zd"
                    }
                  },
                  "Exemple avec suivi de colis": {
                    "value": {
                      "deliveryId": "5q4f5q4zd",
                      "packages": [
                        {
                          "id": "pack123"
                        }
                      ]
                    }
                  },
                  "Exemple avec r√©f√©rence de livraison": {
                    "value": {
                      "deliveryId": "5q4f5q4zd",
                      "externalReference": "12254-AX"
                    }
                  },
                  "Exemple avec √©tiquettes de livraison": {
                    "value": {
                      "deliveryId": "5q4f5q4zd",
                      "labels": [
                        {
                          "id": "LBL001",
                          "type": "base64",
                          "mode": "jpeg",
                          "value": "UklGRvwNAABXRUJQVlA4TPANAAA...",
                          "packageId": "5q4f5q4zd"
                        },
                        {
                          "id": "LBL002",
                          "type": "url",
                          "mode": "jpeg",
                          "value": "http://url.com",
                          "packageId": "5q5f5q4zb"
                        },
                        {
                          "id": "LBL003",
                          "packageId": "5q5f5q4zb"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "205": {
            "description": "The delivery is refused in the end, the possible reasons for refusal are entered in \"reasons\".\n\n[See the refusal reasons](https://woop.stoplight.io/docs/carrier/docs/Mod%C3%A8les/Motifs-de-refus.md)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/refusedReason"
                      }
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "REFUSED_TOO_HEAVY"
                      ],
                      "comment": "I will not accept this delivery after all."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Livraison"
        ],
        "summary": "Demande de livraison"
      }
    },
    "/deliveries/{deliveryId}": {
      "delete": {
        "tags": [
          "Livraison"
        ],
        "description": "This method allows you to send a request to cancel a delivery and confirm it with the carrier. The carrier does not need to request a cancellation on receipt of this request.",
        "operationId": "deleteDelivery",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains information on the reasons for the delivery cancellation.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Cancellation information",
                "properties": {
                  "reasons": {
                    "type": "array",
                    "description": "List of cancellation reasons",
                    "items": {
                      "$ref": "#/components/schemas/cancelledReason"
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "Free comment"
                  }
                },
                "required": [
                  "reasons",
                  "comment"
                ]
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "reasons": [
                      "CANCELLED_CANNOT_SERVICE"
                    ],
                    "comment": "In fact, no."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Delivery already cancelled"
          },
          "204": {
            "description": "Successfully cancelled delivery"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The order cannot be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Information about the refusal to cancel",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "description": "List of cancellation refusal reasons",
                      "items": {
                        "type": "string"
                      }
                    },
                    "comment": {
                      "type": "string",
                      "description": "Free comment"
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ],
                      "comment": "It's too late!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The 'deliveryId' does not exist"
          }
        },
        "summary": "Annulation d'une livraison"
      },
      "patch": {
        "tags": [
          "Livraison"
        ],
        "description": "This method is used to receive requests to update a delivery.",
        "operationId": "patchDelivery",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the updated delivery information.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Delivery update",
                "properties": {
                  "picking": {
                    "type": "object",
                    "description": "Collection address information",
                    "properties": {
                      "address": {
                        "$ref": "#/components/schemas/address"
                      },
                      "infos": {
                        "type": "string",
                        "description": "Additional information about the address"
                      },
                      "interval": {
                        "type": "array",
                        "description": "Collection time slots",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    },
                    "required": [
                      "address",
                      "interval",
                      "contact"
                    ]
                  },
                  "delivery": {
                    "type": "object",
                    "description": "Delivery address information",
                    "properties": {
                      "address": {
                        "$ref": "#/components/schemas/address"
                      },
                      "infos": {
                        "type": "string",
                        "description": "Additional information about the delivery address"
                      },
                      "interval": {
                        "type": "array",
                        "description": "Delivery time slot",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    },
                    "required": [
                      "address",
                      "interval",
                      "contact"
                    ]
                  },
                  "packages": {
                    "type": "array",
                    "description": "All packages",
                    "items": {
                      "$ref": "#/components/schemas/package"
                    }
                  },
                  "services": {
                    "$ref": "#/components/schemas/services"
                  },
                  "referenceNumber": {
                    "type": "string",
                    "description": "Order reference, store number. "
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "picking": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr",
                        "language": "fr-FR",
                        "timezone": "Europe/Paris"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Delivery updated successfully"
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "The order cannot be changed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ],
                      "comment": "It's too late!"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Mise √† jour d'une livraison"
      }
    },
    "/deliveries/{deliveryId}/score": {
      "put": {
        "tags": [
          "Livraison"
        ],
        "description": "This method allows you to receive notification of a new delivery rating.",
        "operationId": "putDeliveryScore",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the customer rating.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notation"
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "score": [
                      {
                        "note": 9,
                        "type": "SCORE_TYPE_RECOMMENDATION",
                        "includedInCarrierScore": false
                      }
                    ],
                    "comment": [
                      {
                        "answer": "Pas de commentaires !",
                        "question": "Avez-vous des suggestions √† nous partager afin de nous aider √† am√©liorer notre service de livraison ?"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Rating successfully registered"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The 'deliveryId' does not exist"
          }
        },
        "summary": "Ajout d'une note d'une livraison"
      }
    },
    "/pickupPoints": {
      "get": {
        "summary": "Recherche de points relais",
        "tags": [
          "Point Relais"
        ],
        "responses": {
          "200": {
            "description": "OK, Contains relay points",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pickupPoints": {
                      "type": "array",
                      "description": "Information on relay points",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/address"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ]
                              }
                            ],
                            "description": "Address of the relay point"
                          },
                          "coordinates": {
                            "$ref": "#/components/schemas/coordinates"
                          },
                          "id": {
                            "type": "string",
                            "description": "ID of the relay point"
                          },
                          "openingHours": {
                            "type": "object",
                            "description": "Opening hours of the relay point",
                            "properties": {
                              "monday": {
                                "type": "array",
                                "description": "Monday opening hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "tuesday": {
                                "type": "array",
                                "description": "Tuesday opening hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "wednesday": {
                                "type": "array",
                                "description": "Wednesday opening hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "thursday": {
                                "type": "array",
                                "description": "Thursday opening hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "friday": {
                                "type": "array",
                                "description": "Friday opening hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "saturday": {
                                "type": "array",
                                "description": "Saturday opening hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "sunday": {
                                "type": "array",
                                "description": "Sunday opening hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              }
                            }
                          },
                          "maxWeight": {
                            "$ref": "#/components/schemas/mass"
                          }
                        },
                        "required": [
                          "address",
                          "coordinates",
                          "id",
                          "carrier",
                          "openingHours",
                          "maxWeight"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "pickupPoints": [
                        {
                          "address": {
                            "addressLine1": "168 RUE DES POSTES",
                            "postalCode": "59000",
                            "city": "Lille",
                            "country": "FR",
                            "title": "Relay point"
                          },
                          "coordinates": {
                            "latitude": 50.638386,
                            "longitude": 3.077183
                          },
                          "id": "q251zd564qz",
                          "openingHours": {
                            "monday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "tuesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "wednesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "thursday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "friday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "saturday": [
                              {
                                "start": "08:00",
                                "end": "16:00"
                              }
                            ],
                            "sunday": [
                              {
                                "start": "08:00",
                                "end": "12:00"
                              }
                            ]
                          },
                          "maxWeight": {
                            "value": 250,
                            "unit": "kg"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getPickupPoints",
        "description": "This method allows you to retrieve the list of relay points located around a specific geolocation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/queryLatitude"
          },
          {
            "$ref": "#/components/parameters/queryLongitude"
          },
          {
            "$ref": "#/components/parameters/queryNumber"
          },
          {
            "$ref": "#/components/parameters/queryKilometricDistance"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointType"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointCategory"
          }
        ]
      }
    },
    "/labels/{labelId}": {
      "get": {
        "summary": "R√©cup√©ration d'une √©tiquette",
        "description": "Retrieving a label in the requested format",
        "operationId": "getLabelById",
        "tags": [
          "√âtiquette"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathLabelId"
          },
          {
            "in": "query",
            "required": true,
            "name": "mode",
            "description": "Required label format",
            "schema": {
              "type": "string",
              "enum": [
                "zpl",
                "pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK, contains the label in base64",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label in base64"
                    }
                  },
                  "required": [
                    "label"
                  ]
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "label": "UklGRvwNAABXRUJQVlA4TPANAAAvhoAKEPVgtLZ"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The 'labelId' does not exist"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "address": {
        "x-examples": {
          "Exemple": {
            "addressLine1": "179 boulevard de Turien",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        },
        "type": "object",
        "description": "All relevant information for a delivery/collection address.",
        "title": "Address (address)",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Full address of the main location"
          },
          "addressLine2": {
            "type": "string",
            "description": "Additional address of the location"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indicates whether the address has a lift\nDefault value: FALSE"
          },
          "floor": {
            "type": "integer",
            "description": "Specifies the floor of the address in question\nDefault value: 0"
          },
          "postalCode": {
            "type": "string",
            "description": "The postcode of the main address"
          },
          "doorCode": {
            "type": "string",
            "description": "Door code"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "district": {
            "type": "string",
            "description": "Borough name"
          },
          "country": {
            "type": "string",
            "enum": [
              "FR",
              "BE"
            ],
            "description": "The Country code (ISO 3166-1 alpha-2)"
          },
          "comment": {
            "type": "string",
            "description": "Additional comments"
          }
        },
        "required": [
          "addressLine1",
          "postalCode",
          "city",
          "country"
        ]
      },
      "addressWithoutSensitiveData": {
        "title": "Address without door code (addressWithoutSensitiveData)",
        "type": "object",
        "description": "Information about an address without a door code.",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Full address of the main location"
          },
          "addressLine2": {
            "type": "string",
            "description": "Additional address of the location"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indicates whether the address has a lift\nDefault value: FALSE"
          },
          "floor": {
            "type": "integer",
            "description": "Specifies the floor of the address in question\nDefault value: 0"
          },
          "postalCode": {
            "type": "string",
            "description": "The postcode of the main address"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "district": {
            "type": "string",
            "description": "Borough name"
          },
          "country": {
            "type": "string",
            "enum": [
              "FR",
              "BE"
            ],
            "description": "The Country code (ISO 3166-1 alpha-2)"
          },
          "pickupPointId": {
            "type": "string",
            "description": "Relay point identifier. Available if the delivery service is \"SERVICE_PICKUP_POINT\""
          },
          "comment": {
            "type": "string",
            "description": "Additional information"
          }
        },
        "required": [
          "addressLine1",
          "postalCode",
          "city",
          "country"
        ],
        "x-examples": {
          "Exemple": {
            "addressLine1": "179 boulevard de Turien",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        }
      },
      "interval": {
        "title": "Date slot (interval)",
        "description": "Specifies a date range with time",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Start of the time slot"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "End of the time slot"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Exemple": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        }
      },
      "contact": {
        "description": "Personal information on the delivery and/or collection contact.",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The first name of the end customer"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the end customer"
          },
          "phone": {
            "type": "string",
            "description": "The telephone number of the end customer"
          },
          "email": {
            "type": "string",
            "description": "The e-mail address of the end customer"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email"
        ],
        "title": "Contact (contact)"
      },
      "tags": {
        "type": "array",
        "description": "Allows you to set \"markers\" on this order.",
        "items": {
          "type": "object",
          "required": [
            "key",
            "value"
          ],
          "properties": {
            "key": {
              "type": "string",
              "example": "origin"
            },
            "value": {
              "type": "string",
              "example": "web"
            }
          }
        },
        "title": "Tags (tags)"
      },
      "contactWithLocalization": {
        "description": "Personal information on the delivery and/or collection contact.",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The first name of the end customer"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the end customer"
          },
          "phone": {
            "type": "string",
            "description": "The telephone number of the end customer"
          },
          "email": {
            "type": "string",
            "description": "The e-mail address of the end customer"
          },
          "language": {
            "type": "string",
            "description": "The language of the end customer"
          },
          "timezone": {
            "type": "string",
            "description": "The delivery time zone of the end customer"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email",
          "language",
          "timezone"
        ],
        "title": "Contact (contactWithLocalization)"
      },
      "services": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/deliveryService"
        },
        "title": "Delivery services (services)",
        "description": "Specifies available delivery services. ",
        "x-examples": {
          "Exemple": [
            "SERVICE_SELECTED_ROOM"
          ]
        }
      },
      "package": {
        "type": "object",
        "description": "Brand's handling unit. Generally used as a collection of products in the order grouped by package.",
        "title": "Package (package)",
        "x-examples": {
          "example-1": {
            "references": [
              "string"
            ],
            "length": {
              "value": 0,
              "unit": "cm"
            },
            "width": {
              "value": 0,
              "unit": "cm"
            },
            "height": {
              "value": 0,
              "unit": "cm"
            },
            "weight": {
              "value": 0,
              "unit": "kg"
            },
            "products": [
              {
                "type": "TYPOLOGY_GENERIC",
                "ean": "string",
                "cug": "string",
                "label": "string",
                "quantity": 1
              }
            ],
            "quantity": 0
          }
        },
        "properties": {
          "references": {
            "type": "array",
            "description": "Internal package references if provided by the brand",
            "items": {
              "type": "string"
            }
          },
          "length": {
            "$ref": "#/components/schemas/length"
          },
          "width": {
            "$ref": "#/components/schemas/length"
          },
          "height": {
            "$ref": "#/components/schemas/length"
          },
          "weight": {
            "$ref": "#/components/schemas/mass"
          },
          "products": {
            "type": "array",
            "description": "List of products in the package",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/productType"
                },
                "ean": {
                  "type": "string",
                  "description": "Product EAN"
                },
                "cug": {
                  "type": "string",
                  "description": "Product Cug"
                },
                "label": {
                  "type": "string",
                  "description": "Product name"
                },
                "quantity": {
                  "type": "integer",
                  "default": 1,
                  "description": "Quantity of product in the package"
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of packages"
          }
        },
        "required": [
          "length",
          "width",
          "height",
          "weight",
          "quantity"
        ]
      },
      "quote": {
        "title": "Quote (quote)",
        "description": "Information on the quote.",
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "description": "Unique identifier referring to the quote sent by the carrier. Please note that this identifier must be unique to the order. "
          },
          "price": {
            "$ref": "#/components/schemas/price"
          },
          "vehicleType": {
            "$ref": "#/components/schemas/vehicleType"
          }
        }
      },
      "notation": {
        "title": "Customer rating (notation)",
        "description": "Specifies the rating received from the end customer for the delivery. ",
        "x-examples": {
          "Exemple": {
            "score": [
              {
                "note": 8,
                "type": "SCORE_TYPE_RECOMMENDATION",
                "includedInCarrierScore": true
              }
            ],
            "comment": [
              {
                "answer": "Non, livraison correcte.",
                "question": "Avez-vous des suggestions √† nous partager afin de nous aider √† am√©liorer notre service de livraison ?"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "score": {
            "type": "array",
            "description": "List of scores",
            "items": {
              "$ref": "#/components/schemas/score"
            }
          },
          "comment": {
            "type": "array",
            "description": "List of customer comments",
            "items": {
              "$ref": "#/components/schemas/scoreComment"
            }
          }
        },
        "required": [
          "score",
          "comment"
        ]
      },
      "score": {
        "type": "object",
        "title": "Score (score)",
        "description": "Specifies the score obtained for the delivery. ",
        "x-examples": {
          "Score de recommendation": {
            "note": 6,
            "type": "SCORE_TYPE_RECOMMENDATION",
            "includedInCarrierScore": false
          },
          "Score de satisfaction": {
            "note": 9,
            "type": "SCORE_TYPE_SATISFACTION",
            "includedInCarrierScore": true
          }
        },
        "properties": {
          "note": {
            "type": "number",
            "description": "Rating out of 10"
          },
          "type": {
            "type": "string",
            "enum": [
              "SCORE_TYPE_RECOMMENDATION",
              "SCORE_TYPE_SATISFACTION"
            ],
            "description": "Score type"
          },
          "includedInCarrierScore": {
            "type": "boolean",
            "description": "Included in the calculation of the carrier rating"
          }
        },
        "required": [
          "note",
          "type",
          "includedInCarrierScore"
        ]
      },
      "length": {
        "description": "Specifies the size of a package.",
        "type": "object",
        "title": "Dimension (length)",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": ""
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnit"
          }
        },
        "required": [
          "value",
          "unit"
        ]
      },
      "mass": {
        "description": "Specifies the weight of a package/product.",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "Guide value of the weight"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnit"
          }
        },
        "required": [
          "value",
          "unit"
        ],
        "title": "Weight (mass)"
      },
      "retailer": {
        "title": "Brand (retailer)",
        "description": "Provides the information for the identification of the brand during a delivery. ",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Brand name"
          },
          "id": {
            "type": "string",
            "description": "Brand identifier"
          },
          "store": {
            "type": "object",
            "required": [
              "id",
              "name",
              "contact"
            ],
            "description": "Brand store",
            "properties": {
              "id": {
                "type": "string",
                "description": "Store identifier"
              },
              "name": {
                "type": "string",
                "description": "Store name"
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          }
        },
        "required": [
          "name",
          "id",
          "store"
        ]
      },
      "price": {
        "description": "Corresponds to the quote price",
        "type": "object",
        "title": "Quote price",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "Guide value of the price",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        }
      },
      "refusedReason": {
        "type": "string",
        "description": "Describes the reasons possible for refusal in the related article: \"Reasons for refusal'.",
        "title": "Reason for refusal (refusedReason)",
        "enum": [
          "REFUSED_AREA",
          "REFUSED_AVAILABILITY",
          "REFUSED_DAY_OFF",
          "REFUSED_EXCEPTION",
          "REFUSED_TIME_NOT_WORKED",
          "REFUSED_TOO_HEAVY",
          "REFUSED_TOO_LARGE"
        ],
        "example": "REFUSED_AREA",
        "x-examples": {
          "Exemple": "REFUSED_AREA"
        }
      },
      "cancelledReason": {
        "type": "string",
        "enum": [
          "CANCELLED_CANNOT_SERVICE",
          "CANCELLED_UNKNOWN",
          "CANCELLED_PREPARATION_DELAYED",
          "CANCELLED_BY_CLIENT",
          "CANCELLED_NEW_ADDRESS",
          "CANCELLED_INCOMPLETE"
        ],
        "description": "List of possible reasons for delivery cancellation",
        "title": "Reason for delivery cancellation (cancelledReason)",
        "x-examples": {
          "Exemple": "CANCELLED_CANNOT_SERVICE"
        }
      },
      "deliveryService": {
        "enum": [
          "SERVICE_SELECTED_ROOM",
          "SERVICE_FRONT_HOME",
          "SERVICE_UNPACKING",
          "SERVICE_INSTALL",
          "SERVICE_RECOVERY",
          "SERVICE_PICKUP_POINT",
          "SERVICE_REGULAR_FRONT_HOME",
          "SERVICE_SIMPLE_INSTALL",
          "SERVICE_COMPLEX_INSTALL",
          "SERVICE_ASSEMBLY"
        ],
        "title": "Delivery service (deliveryService)",
        "description": "Specifies the delivery services available on the platform. ",
        "x-examples": {
          "Exemple": "SERVICE_SELECTED_ROOM"
        },
        "type": "string"
      },
      "vehicleType": {
        "type": "string",
        "enum": [
          "VEHICLE_TYPE_BIKE",
          "VEHICLE_TYPE_SCOOTER",
          "VEHICLE_TYPE_E_SCOOTER",
          "VEHICLE_TYPE_VAN_SMALL",
          "VEHICLE_TYPE_E_VAN_SMALL",
          "VEHICLE_TYPE_VAN_MEDIUM",
          "VEHICLE_TYPE_PEDESTRIAN",
          "VEHICLE_TYPE_TRUCK",
          "VEHICLE_TYPE_VAN_BIG",
          "VEHICLE_TYPE_E_VAN_BIG",
          "VEHICLE_TYPE_BIKE_CARGO",
          "VEHICLE_TYPE_CAR",
          "VEHICLE_TYPE_E_CAR",
          "VEHICLE_TYPE_GAZ_VAN_BIG",
          "VEHICLE_TYPE_GAZ_VAN_MEDIUM"
        ],
        "title": "Vehicle type (vehicleType)",
        "description": "Specifies the type of vehicle used for the delivery.",
        "x-examples": {
          "Exemple": "VEHICLE_TYPE_BIKE"
        }
      },
      "productType": {
        "type": "string",
        "enum": [
          "TYPOLOGY_GENERIC",
          "TYPOLOGY_GROCERY",
          "TYPOLOGY_FRESH",
          "TYPOLOGY_FROZEN",
          "TYPOLOGY_DANGEROUS",
          "TYPOLOGY_HOUSEHOLD",
          "TYPOLOGY_VOLUMINOUS",
          "TYPOLOGY_FRAGILE",
          "TYPOLOGY_VOLUMINOUS_FRAGILE",
          "TYPOLOGY_LARGE_HOUSEHOLD",
          "TYPOLOGY_PALLET_GENERIC",
          "TYPOLOGY_NON_STANDARD"
        ],
        "title": "Product type (productType)",
        "description": "Specifies the product type.",
        "x-examples": {
          "Exemple": "TYPOLOGY_GENERIC"
        }
      },
      "currency": {
        "type": "string",
        "enum": [
          "EUR"
        ],
        "description": "Currency, specifies the currency used.",
        "title": "Currency (currency)",
        "x-examples": {
          "Exemple": "EUR"
        }
      },
      "lengthUnit": {
        "type": "string",
        "enum": [
          "mm",
          "cm",
          "m",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "description": "Specifies the unit of length.",
        "default": "cm",
        "title": "Unit of measurement (lengthUnit)"
      },
      "massUnit": {
        "type": "string",
        "enum": [
          "mcg",
          "mg",
          "g",
          "kg",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "description": "Specifies the unit of weight.",
        "default": "kg",
        "title": "Unit of weight (massUnits)",
        "x-examples": {
          "Exemple": "kg"
        }
      },
      "withoutContact": {
        "required": [
          "address",
          "interval"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/addressWithoutSensitiveData"
          },
          "infos": {
            "type": "string"
          },
          "interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interval"
            }
          }
        },
        "title": "Information on the collection or delivery address",
        "description": "Information on the collection or delivery address."
      },
      "withContact": {
        "required": [
          "address",
          "interval",
          "contact"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "infos": {
            "type": "string"
          },
          "interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interval"
            }
          },
          "contact": {
            "$ref": "#/components/schemas/contact"
          }
        },
        "title": "Collection address information",
        "description": "Collection address information."
      },
      "withContactAndLocalization": {
        "required": [
          "address",
          "interval",
          "contact"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "infos": {
            "type": "string"
          },
          "interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interval"
            }
          },
          "contact": {
            "$ref": "#/components/schemas/contactWithLocalization"
          }
        },
        "title": "Delivery address information",
        "description": "Delivery address information."
      },
      "postQuote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/deliveryInformations"
          },
          {
            "required": [
              "picking",
              "delivery"
            ],
            "properties": {
              "picking": {
                "$ref": "#/components/schemas/withoutContact"
              },
              "delivery": {
                "$ref": "#/components/schemas/withoutContact"
              }
            }
          }
        ],
        "description": "Contains the information needed to create a delivery quote.",
        "title": "Information for requesting a quote (postQuote)"
      },
      "postDelivery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/postDeliveryInformations"
          },
          {
            "required": [
              "quoteId",
              "picking",
              "delivery"
            ],
            "properties": {
              "picking": {
                "$ref": "#/components/schemas/withContact"
              },
              "delivery": {
                "$ref": "#/components/schemas/withContactAndLocalization"
              }
            }
          }
        ],
        "title": "Delivery request (postDelivery)",
        "description": "Contains the information required to create a delivery request. "
      },
      "deliveryInformations": {
        "description": "Delivery information.",
        "type": "object",
        "title": "Delivery information (deliveryInformations)",
        "x-examples": {
          "Exemple": {
            "orderId": "65zq1d5qz1d56q1",
            "referenceNumber": "65zq1d5qz1d56q1-456",
            "retailer": {
              "name": "Enseigne A",
              "id": "ret123",
              "store": {
                "id": "store123",
                "name": "Magasin C",
                "contact": {
                  "firstName": "Pierre",
                  "lastName": "Dupond",
                  "phone": "+33600000000",
                  "email": "pierre.dupond@mail.fr"
                }
              }
            },
            "picking": {
              "contact": {
                "firstName": "Michel",
                "lastName": "Dupont",
                "phone": "+33600000000",
                "email": "michel.dupont@mail.fr"
              },
              "address": {
                "addressLine1": "237 rue du Ballon",
                "addressLine2": "Niji",
                "postalCode": "59110",
                "city": "La Madeleine",
                "country": "FR"
              },
              "infos": "Travaux en ce moment attention.",
              "interval": [
                {
                  "start": "2019-12-04T12:30:00+0000",
                  "end": "2019-12-04T13:30:00+0000"
                }
              ]
            },
            "delivery": {
              "contact": {
                "firstName": "John",
                "lastName": "Doe",
                "phone": "+33600000000",
                "email": "john.doe@mail.fr",
                "language": "fr-FR",
                "timezone": "Europe/Paris"
              },
              "address": {
                "addressLine1": "165 avenue de Bretagne",
                "elevator": true,
                "floor": 2,
                "postalCode": "59000",
                "city": "Lille",
                "country": "FR"
              },
              "interval": [
                {
                  "start": "2019-12-06T13:00:00+0000",
                  "end": "2019-12-06T15:00:00+0000"
                }
              ]
            },
            "packages": [
              {
                "length": {
                  "value": 15,
                  "unit": "cm"
                },
                "width": {
                  "value": 35.5,
                  "unit": "cm"
                },
                "height": {
                  "value": 1.25,
                  "unit": "m"
                },
                "weight": {
                  "value": 12.35,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4897567123548",
                    "cug": "e21fe21",
                    "label": "Armoire",
                    "quantity": 1
                  }
                ],
                "reference": "1234A",
                "quantity": 1
              }
            ],
            "services": [
              "SERVICE_SELECTED_ROOM"
            ]
          }
        },
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Unique order identifier to be entered by the brand. 1 orderId = 1 order"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Order reference, store number. Can be the same as the orderId. The referenceNumber is not unique."
          },
          "productsPrice": {
            "$ref": "#/components/schemas/productPrice"
          },
          "retailer": {
            "$ref": "#/components/schemas/retailer"
          },
          "packages": {
            "type": "array",
            "description": "Brand's handling unit. Generally used as a collection of products in the order grouped by package",
            "items": {
              "$ref": "#/components/schemas/package"
            }
          },
          "services": {
            "$ref": "#/components/schemas/services"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          }
        },
        "required": [
          "orderId",
          "referenceNumber",
          "retailer",
          "packages",
          "services"
        ]
      },
      "postDeliveryInformations": {
        "title": "Delivery request information (postDeliveryInformations)",
        "description": "Delivery request information.",
        "type": "object",
        "x-examples": {
          "example": {
            "orderId": "string",
            "quoteId": "string",
            "referenceNumber": "string",
            "productsPrice": {
              "value": 0,
              "currency": "EUR"
            },
            "retailer": {
              "name": "string",
              "id": "string",
              "store": {
                "id": "string",
                "name": "string",
                "contact": {
                  "firstName": "string",
                  "lastName": "string",
                  "phone": "string",
                  "email": "string"
                }
              }
            },
            "packages": [
              {
                "references": [
                  "string"
                ],
                "length": {
                  "value": 0,
                  "unit": "cm"
                },
                "width": {
                  "value": 0,
                  "unit": "cm"
                },
                "height": {
                  "value": 0,
                  "unit": "cm"
                },
                "weight": {
                  "value": 0,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "string",
                    "cug": "string",
                    "label": "string",
                    "quantity": 1
                  }
                ],
                "quantity": 0
              }
            ],
            "services": [
              "SERVICE_SELECTED_ROOM"
            ],
            "tags": [
              {
                "key": "origin",
                "value": "web"
              }
            ]
          }
        },
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Unique order identifier to be entered by the brand. 1 orderId = 1 order"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Order reference, store number. Can be the same as the orderId. The referenceNumber is not unique. "
          },
          "productsPrice": {
            "$ref": "#/components/schemas/productPrice"
          },
          "retailer": {
            "$ref": "#/components/schemas/retailer"
          },
          "packages": {
            "type": "array",
            "description": "All packages",
            "items": {
              "$ref": "#/components/schemas/package"
            }
          },
          "services": {
            "$ref": "#/components/schemas/services"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "quoteId": {
            "type": "string",
            "description": "Unique quote identifier of the initial order"
          }
        },
        "required": [
          "orderId",
          "referenceNumber",
          "retailer",
          "packages",
          "services",
          "quoteId"
        ]
      },
      "deliveryCreated": {
        "type": "object",
        "description": "Feedback on the creation of a delivery. ",
        "title": "Feedback (deliveryCreated)",
        "x-examples": {
          "Exemple": {
            "deliveryId": "1123663GHG"
          }
        },
        "properties": {
          "deliveryId": {
            "type": "string",
            "description": "Unique identifier of the delivery sent by the carrier. Please note that this identifier must be unique to the order. "
          },
          "externalReference": {
            "type": "string",
            "description": "Delivery reference number"
          },
          "packages": {
            "type": "array",
            "description": "Information on the package",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "labels": {
            "type": "array",
            "description": "Information on the delivery labels",
            "items": {
              "$ref": "#/components/schemas/label"
            }
          }
        },
        "required": [
          "deliveryId"
        ]
      },
      "coordinates": {
        "type": "object",
        "description": "Specifies the geographical coordinates to be used for creation.",
        "x-examples": {
          "Exemple": {
            "latitude": 50.63833,
            "longitude": 3.077359
          }
        },
        "title": "Geographical coordinates (coordinates)",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "interval_hour": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "time"
          },
          "end": {
            "type": "string",
            "format": "time"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Exemple": {
            "start": "14:00",
            "end": "18:00"
          }
        },
        "description": "Specifies the opening date interval.",
        "title": "Time slot (interval_hour)"
      },
      "productPrice": {
        "title": "Product sales prices (price)",
        "type": "object",
        "description": "Corresponds to the sale prices of the products. Entered if the delivery is performed with the service ‚ÄúSERVICE_INSTALL‚Äù.",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        }
      },
      "label": {
        "description": "Carrier label",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Label identifier"
          },
          "type": {
            "type": "string",
            "description": "Type of label delivery",
            "enum": [
              "base64",
              "url"
            ]
          },
          "mode": {
            "type": "string",
            "description": "Label format",
            "enum": [
              "zpl",
              "pdf",
              "jpg",
              "jpeg"
            ]
          },
          "value": {
            "type": "string",
            "description": "Label in base64 or URL to the label"
          },
          "packageId": {
            "type": "string",
            "description": "Associated package identifier"
          }
        },
        "required": [
          "id"
        ],
        "title": "Label (label)"
      },
      "scoreComment": {
        "title": "Comments on the delivery (scoreComment)",
        "type": "object",
        "x-examples": {
          "Exemple": {
            "answer": "Pas de commentaires !",
            "question": "Avez-vous des suggestions √† nous partager afin de nous aider √† am√©liorer notre service de livraison ?"
          }
        },
        "description": "Additional field for customer comments",
        "properties": {
          "answer": {
            "type": "string",
            "description": "Response by the end customer"
          },
          "question": {
            "type": "string",
            "description": "Question for the end customer"
          }
        },
        "required": [
          "answer",
          "question"
        ]
      }
    },
    "parameters": {
      "queryLatitude": {
        "in": "query",
        "required": true,
        "description": "Latitude of the search point",
        "name": "latitude",
        "schema": {
          "type": "number"
        }
      },
      "queryLongitude": {
        "in": "query",
        "description": "Longitude of the search point",
        "required": true,
        "name": "longitude",
        "schema": {
          "type": "number"
        }
      },
      "queryNumber": {
        "in": "query",
        "required": false,
        "description": "Number of relay points returned",
        "name": "number",
        "schema": {
          "type": "integer",
          "maximum": 25,
          "default": 10
        }
      },
      "queryKilometricDistance": {
        "in": "query",
        "required": false,
        "description": "Distance in kilometres from the search radius",
        "name": "kilometricDistance",
        "schema": {
          "type": "integer",
          "maximum": 40,
          "default": 5
        }
      },
      "queryPickupPointType": {
        "in": "query",
        "required": false,
        "name": "type",
        "description": "The type of relay point",
        "schema": {
          "type": "string",
          "enum": [
            "PICKUP_POINT_AGENCY",
            "PICKUP_POINT_POST_OFFICE",
            "PICKUP_POINT_RELAY_WITH_LOCKER",
            "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
            "PICKUP_POINT_ALL"
          ],
          "default": "PICKUP_POINT_RELAY_WITH_LOCKER"
        }
      },
      "queryPickupPointCategory": {
        "in": "query",
        "required": false,
        "name": "category",
        "description": "The relay point category",
        "schema": {
          "type": "string",
          "enum": [
            "PICKUP_POINT_STANDARD",
            "PICKUP_POINT_XL",
            "PICKUP_POINT_XXL",
            "PICKUP_POINT_DRIVE"
          ]
        }
      },
      "pathQuoteId": {
        "in": "path",
        "required": true,
        "description": "Quote identifier",
        "name": "quoteId",
        "schema": {
          "type": "string"
        }
      },
      "pathDeliveryId": {
        "in": "path",
        "required": true,
        "name": "deliveryId",
        "description": "Delivery identifier",
        "schema": {
          "type": "string"
        }
      },
      "pathLabelId": {
        "in": "path",
        "required": true,
        "name": "labelId",
        "description": "Label identifier",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {}
  },
  "servers": [],
  "tags": [
    {
      "name": "Livraison"
    },
    {
      "name": "Devis"
    },
    {
      "name": "Point Relais"
    },
    {
      "name": "Colis"
    },
    {
      "name": "√âtiquette"
    }
  ]
}