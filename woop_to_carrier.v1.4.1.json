{
  "openapi": "3.0.2",
  "info": {
    "title": "Woop to Carrier",
    "description": "First, all informations about Woop API headed to carriers are centralized in this documentation. If you need precisions or have any questions, please contact internal technical team.\n\nTo use the API, you need to take your access you got during the creation of your account on Woop platform.\n\nThe current offered version is <b>Version 1.4.0</b>",
    "version": "1.4.0"
  },
  "paths": {
    "/quotes": {
      "post": {
        "tags": [
          "Quotes"
        ],
        "description": "Allows receiving quotes requests. If the quote is validated, transmitted informations will be used during the delivery order creation with POST /deliveries.",
        "operationId": "postQuote",
        "requestBody": {
          "required": true,
          "description": "Contains necessary informations to create a quote.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postQuote"
              },
              "examples": {
                "Default example": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Retailer A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Magasin C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "address": {
                        "addressLine1": "179 Boulevard de Turin",
                        "addressLine2": "",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "Road works.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "addressLine2": "Euratech - EuraTechnologies",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 121.8,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 77.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 55,
                          "unit": "cm"
                        },
                        "weight": {
                          "value": 33.4,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Product label 1",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Example with product price": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Retailer A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Store C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "address": {
                        "addressLine1": "179 Boulevard de Turin",
                        "addressLine2": "",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "Road works.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "addressLine2": "Euratech - EuraTechnologies",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 121.8,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 77.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 55,
                          "unit": "cm"
                        },
                        "weight": {
                          "value": 33.4,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Product label 1",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM",
                      "SERVICE_ASSEMBLY"
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currency": "EUR"
                    }
                  }
                },
                "Example with tags": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Retailer A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Store C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "address": {
                        "addressLine1": "179 Boulevard de Turin",
                        "addressLine2": "",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "Road works.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "addressLine2": "Euratech - EuraTechnologies",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 121.8,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 77.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 55,
                          "unit": "cm"
                        },
                        "weight": {
                          "value": 33.4,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Product label 1",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ]
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success code, quotes have been generated. All asked carriers have a quote ID to accept the delivery.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Liste des devis",
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "quoteId": "4zd5z4d5zd",
                        "price": {
                          "value": 135.56,
                          "currency": "EUR"
                        },
                        "vehicleType": "VEHICLE_TYPE_BIKE"
                      }
                    ]
                  }
                }
              }
            }
          },
          "202": {
            "description": "Success code, quotes have been generated. All asked carriers have a quote ID to accept the delivery.\n\n[See refusal reasons](https://woop.stoplight.io/docs/carrier/branches/english/docs/3.%20Models/Refusal-reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "reasons"
                  ],
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/refusedReason"
                      }
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "REFUSED_TOO_HEAVY"
                      ],
                      "comment": "It's too heavy !"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect elements in body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Quote request"
      }
    },
    "/quotes/{quoteId}": {
      "delete": {
        "tags": [
          "Quotes"
        ],
        "description": "Allows receiving quote cancellation requests.",
        "operationId": "deleteQuote",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathQuoteId"
          }
        ],
        "responses": {
          "204": {
            "description": "Quote cancelled with success"
          },
          "403": {
            "description": "The quote can't or no longer be cancelled"
          },
          "404": {
            "description": "The 'quoteId' does not exist"
          }
        },
        "summary": "Quote cancellation"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "quoteId",
          "in": "path",
          "required": true,
          "description": "Quote ID"
        }
      ]
    },
    "/deliveries": {
      "post": {
        "operationId": "postDelivery",
        "description": "Allows validating a quote and receiving the delivery order. Its response provides additional useful informations for the delivery.",
        "requestBody": {
          "required": true,
          "description": "Contains necessary informations to create a delivery.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postDelivery"
              },
              "examples": {
                "Default example": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "quoteId": "4zd5z4d5zd",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Retailer A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Store C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr"
                      },
                      "address": {
                        "addressLine1": "237 rue du Ballon",
                        "addressLine2": "Niji",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "Road works.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr",
                        "language": "fr-FR",
                        "timezone": "Europe/Paris"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 35.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.25,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 12.35,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Wardrobe",
                            "quantity": 1
                          }
                        ],
                        "references": [
                          "1234A"
                        ],
                        "quantity": 1
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Example with product price": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "quoteId": "4zd5z4d5zd",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Retailer A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Store C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr"
                      },
                      "address": {
                        "addressLine1": "237 rue du Ballon",
                        "addressLine2": "Niji",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "Road works.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 35.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.25,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 12.35,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Wardrobe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM",
                      "SERVICE_ASSEMBLY"
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currency": "EUR"
                    }
                  }
                },
                "Example with tags": {
                  "value": {
                    "orderId": "65zq1d5qz1d56q1",
                    "quoteId": "4zd5z4d5zd",
                    "referenceNumber": "65zq1d5qz1d56q1-456",
                    "retailer": {
                      "name": "Retailer A",
                      "id": "ret123",
                      "store": {
                        "id": "store123",
                        "name": "Store C",
                        "contact": {
                          "firstName": "Pierre",
                          "lastName": "Dupond",
                          "phone": "+33600000000",
                          "email": "pierre.dupond@mail.fr"
                        }
                      }
                    },
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr"
                      },
                      "address": {
                        "addressLine1": "237 rue du Ballon",
                        "addressLine2": "Niji",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "Road works.",
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    },
                    "delivery": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr",
                        "language": "fr-FR",
                        "timezone": "Europe/Paris"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-06T13:00:00+0000",
                          "end": "2019-12-06T15:00:00+0000"
                        }
                      ]
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 35.5,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.25,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 12.35,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4897567123548",
                            "cug": "e21fe21",
                            "label": "Wardrobe",
                            "quantity": 1
                          }
                        ],
                        "references": [
                          "1234A"
                        ],
                        "quantity": 1
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Delivery is accepted, a 'deliveryId' is returned, in addition an array of 'packages' IDs can be returned in case of tracking by package.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/deliveryCreated"
                    },
                    {
                      "$ref": "#/components/schemas/deliveryCreatedPackages"
                    },
                    {
                      "$ref": "#/components/schemas/deliveryCreatedReference"
                    }
                  ]
                },
                "examples": {
                  "Default example": {
                    "value": {
                      "deliveryId": "5q4f5q4zd"
                    }
                  },
                  "Example with package tracking": {
                    "value": {
                      "deliveryId": "5q4f5q4zd",
                      "packages": [
                        {
                          "id": "pack123"
                        }
                      ]
                    }
                  },
                  "Example with delivery reference": {
                    "value": {
                      "deliveryId": "5q4f5q4zd",
                      "externalReference": "12254-AX"
                    }
                  }
                }
              }
            }
          },
          "205": {
            "description": "Delivery is refused after all, possible refusal reasons are described in \"reasons\". \n\n[See refusal reasons](https://woop.stoplight.io/docs/carrier/branches/english/docs/3.%20Models/Refusal-reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/refusedReason"
                      }
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "REFUSED_TOO_HEAVY"
                      ],
                      "comment": "After all, i don't take this delivery."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect element in body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Delivery"
        ],
        "summary": "Delivery request"
      }
    },
    "/deliveries/{deliveryId}": {
      "delete": {
        "tags": [
          "Delivery"
        ],
        "description": "Allows receiving delivery cancellation requests.",
        "operationId": "deleteDelivery",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contaisn informations about delivery cancellation reasons.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Cancellation informations",
                "properties": {
                  "reasons": {
                    "type": "array",
                    "description": "list of refusal reasons",
                    "items": {
                      "$ref": "#/components/schemas/cancelledReason"
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "Free comment"
                  }
                },
                "required": [
                  "reasons",
                  "comment"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "reasons": [
                      "CANCELLED_CANNOT_SERVICE"
                    ],
                    "comment": "In the end, no."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Delivery already cancelled"
          },
          "204": {
            "description": "Delivery cancelled with success"
          },
          "400": {
            "description": "Missing or incorrect element in body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Delivery can't be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Informations about cancellation refusal",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "description": "List of cancellation refusal reasons",
                      "items": {
                        "type": "string"
                      }
                    },
                    "comment": {
                      "type": "string",
                      "description": "Free comment"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ],
                      "comment": "It's too late !"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The 'deliveryId' does not exist"
          }
        },
        "summary": "Delivery cancellation"
      },
      "patch": {
        "tags": [
          "Delivery"
        ],
        "description": "Allows receiving delivey update requests.",
        "operationId": "patchDelivery",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains informations about delivery update.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Delivery update",
                "properties": {
                  "picking": {
                    "type": "object",
                    "description": "Informations about picking address",
                    "properties": {
                      "address": {
                        "$ref": "#/components/schemas/address"
                      },
                      "infos": {
                        "type": "string",
                        "description": "Free informations about address"
                      },
                      "interval": {
                        "type": "array",
                        "description": "Picking interval",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    },
                    "required": [
                      "address",
                      "interval",
                      "contact"
                    ]
                  },
                  "delivery": {
                    "type": "object",
                    "description": "Informations about delivery address",
                    "properties": {
                      "address": {
                        "$ref": "#/components/schemas/address"
                      },
                      "infos": {
                        "type": "string",
                        "description": "Free informations about the delivery address"
                      },
                      "interval": {
                        "type": "array",
                        "description": "Delivery interval",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    },
                    "required": [
                      "address",
                      "interval",
                      "contact"
                    ]
                  },
                  "packages": {
                    "type": "array",
                    "description": "Whole packages",
                    "items": {
                      "$ref": "#/components/schemas/package"
                    }
                  },
                  "services": {
                    "$ref": "#/components/schemas/services"
                  },
                  "referenceNumber": {
                    "type": "string",
                    "description": "Order reference, number associated with a store."
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "picking": {
                      "contact": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "+33600000000",
                        "email": "john.doe@mail.fr",
                        "language": "fr-FR",
                        "timezone": "Europe/Paris"
                      },
                      "address": {
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 2,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T13:30:00+0000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Delivery updated with success"
          },
          "401": {
            "description": "You are not allowed to access this element."
          },
          "403": {
            "description": "The delivery can't be modified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ],
                      "comment": "Too late !"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delivery update"
      }
    },
    "/deliveries/{deliveryId}/score": {
      "put": {
        "tags": [
          "Delivery"
        ],
        "description": "Allows receiving new delivery rating notification.",
        "operationId": "putDeliveryScore",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains client rating.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notation"
              },
              "examples": {
                "Example": {
                  "value": {
                    "score": [
                      {
                        "note": 9,
                        "type": "SCORE_TYPE_RECOMMENDATION"
                      }
                    ],
                    "comment": "I strongly recommend !"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Rating saved with success"
          },
          "400": {
            "description": "Missing or incorrect element in body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The 'deliveryId' does not exist"
          }
        },
        "summary": "Add a delivery rating"
      }
    },
    "/pickupPoints": {
      "get": {
        "summary": "Pickup point search",
        "tags": [
          "Pickup point"
        ],
        "responses": {
          "200": {
            "description": "OK, contains pickup points",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pickupPoints": {
                      "type": "array",
                      "description": "Informations about pickup points",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/address"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ]
                              }
                            ],
                            "description": "Pickup point address"
                          },
                          "coordinates": {
                            "$ref": "#/components/schemas/coordinates"
                          },
                          "id": {
                            "type": "string",
                            "description": "Pickup point ID"
                          },
                          "openingHours": {
                            "type": "object",
                            "description": "Pickup point opening hours",
                            "properties": {
                              "monday": {
                                "type": "array",
                                "description": "Monday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "tuesday": {
                                "type": "array",
                                "description": "Tuesday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "wednesday": {
                                "type": "array",
                                "description": "Wednesday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "thursday": {
                                "type": "array",
                                "description": "Thursday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "friday": {
                                "type": "array",
                                "description": "Friday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "saturday": {
                                "type": "array",
                                "description": "Saturday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "sunday": {
                                "type": "array",
                                "description": "Sunday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              }
                            }
                          },
                          "maxWeight": {
                            "$ref": "#/components/schemas/mass"
                          }
                        },
                        "required": [
                          "address",
                          "coordinates",
                          "id",
                          "carrier",
                          "openingHours",
                          "maxWeight"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "pickupPoints": [
                        {
                          "address": {
                            "addressLine1": "168 RUE DES POSTES",
                            "postalCode": "59000",
                            "city": "Lille",
                            "country": "FR",
                            "title": "Pickup point"
                          },
                          "coordinates": {
                            "latitude": 50.638386,
                            "longitude": 3.077183
                          },
                          "id": "q251zd564qz",
                          "openingHours": {
                            "monday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "tuesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "wednesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "thursday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "friday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "saturday": [
                              {
                                "start": "08:00",
                                "end": "16:00"
                              }
                            ],
                            "sunday": [
                              {
                                "start": "08:00",
                                "end": "12:00"
                              }
                            ]
                          },
                          "maxWeight": {
                            "value": 250,
                            "unit": "kg"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect element in body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getPickupPoints",
        "description": "Allows receiving list of pickup points located around given geographic localisation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/queryLatitude"
          },
          {
            "$ref": "#/components/parameters/queryLongitude"
          },
          {
            "$ref": "#/components/parameters/queryNumber"
          },
          {
            "$ref": "#/components/parameters/queryKilometricDistance"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointType"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointCategory"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "address": {
        "x-examples": {
          "Example": {
            "addressLine1": "179 boulevard de Turin",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        },
        "type": "object",
        "description": "All useful informations about delivery/picking address.",
        "title": "Address (address)",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Main place full address"
          },
          "addressLine2": {
            "type": "string",
            "description": "Place additionnal address"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indicates if place has a lift\nDefault value : FALSE"
          },
          "floor": {
            "type": "integer",
            "description": "Specifies the floor\nDefault value : 0"
          },
          "postalCode": {
            "type": "string",
            "description": "Corresponds with associated main place potal code"
          },
          "doorCode": {
            "type": "string",
            "description": "Door code"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "district": {
            "type": "string",
            "description": "District"
          },
          "country": {
            "type": "string",
            "enum": [
              "FR",
              "BE"
            ],
            "description": "Country code (ISO 3166-1 alpha-2)"
          },
          "comment": {
            "type": "string",
            "description": "Comment, free to use"
          }
        },
        "required": [
          "addressLine1",
          "postalCode",
          "city",
          "country"
        ]
      },
      "addressWithoutSensitiveData": {
        "title": "Address without door code (addressWithoutSensitiveData)",
        "type": "object",
        "description": "Address informations without door code.",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Main place full address"
          },
          "addressLine2": {
            "type": "string",
            "description": "Place additionnal address"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indicates if place has a lift\nDefault value : FALSE"
          },
          "floor": {
            "type": "integer",
            "description": "Specifies the floor\nDefault value : 0"
          },
          "postalCode": {
            "type": "string",
            "description": "Corresponds with associated main place potal code"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "district": {
            "type": "string",
            "description": "District"
          },
          "country": {
            "type": "string",
            "enum": [
              "FR",
              "BE"
            ],
            "description": "Country code (ISO 3166-1 alpha-2)"
          },
          "pickupPointId": {
            "type": "string",
            "description": "Pickup point ID. Present if delivery service is \"SERVICE_PICKUP_POINT\""
          }
        },
        "required": [
          "addressLine1",
          "postalCode",
          "city",
          "country"
        ],
        "x-examples": {
          "Example": {
            "addressLine1": "179 boulevard de Turin",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        }
      },
      "interval": {
        "title": "Date interval (interval)",
        "description": "Specifies a date interval with time.",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Interval start"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "Interval end"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        }
      },
      "contact": {
        "description": "Personal informations about picking/delivery contact.",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Client firt name"
          },
          "lastName": {
            "type": "string",
            "description": "Client last name"
          },
          "phone": {
            "type": "string",
            "description": "Client phone number"
          },
          "email": {
            "type": "string",
            "description": "Client e-mail"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email"
        ],
        "title": "Contact (contact)"
      },
      "tags": {
        "type": "array",
        "description": "Allows defining \"markers\" on this order.",
        "items": {
          "type": "object",
          "required": [
            "key",
            "value"
          ],
          "properties": {
            "key": {
              "type": "string",
              "example": "origin"
            },
            "value": {
              "type": "string",
              "example": "web"
            }
          }
        },
        "title": "Tags (tags)"
      },
      "contactWithLocalization": {
        "description": "Personal informations about picking/delivery contact.",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Client firt name"
          },
          "lastName": {
            "type": "string",
            "description": "Client last name"
          },
          "phone": {
            "type": "string",
            "description": "Client phone number"
          },
          "email": {
            "type": "string",
            "description": "Client e-mail"
          },
          "language": {
            "type": "string",
            "description": "Client language"
          },
          "timezone": {
            "type": "string",
            "description": "Delivery time zone for the client"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email",
          "language",
          "timezone"
        ],
        "title": "Contact (contactWithLocalization)"
      },
      "services": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/deliveryService"
        },
        "title": "Delivery services (services)",
        "description": "Specifies the possible delivery services. ",
        "x-examples": {
          "Example": [
            "SERVICE_SELECTED_ROOM"
          ]
        }
      },
      "package": {
        "type": "object",
        "description": "Handling unit at retailers own. Generally used as the whole order products grouped by package.",
        "title": "Package (package)",
        "x-examples": {
          "example": {
            "references": [
              "string"
            ],
            "length": {
              "value": 0,
              "unit": "cm"
            },
            "width": {
              "value": 0,
              "unit": "cm"
            },
            "height": {
              "value": 0,
              "unit": "cm"
            },
            "weight": {
              "value": 0,
              "unit": "kg"
            },
            "products": [
              {
                "type": "TYPOLOGY_GENERIC",
                "ean": "string",
                "cug": "string",
                "label": "string",
                "quantity": 1
              }
            ],
            "quantity": 0
          }
        },
        "properties": {
          "references": {
            "type": "array",
            "description": "Package internal references if provided by retailer",
            "items": {
              "type": "string"
            }
          },
          "length": {
            "$ref": "#/components/schemas/length"
          },
          "width": {
            "$ref": "#/components/schemas/length"
          },
          "height": {
            "$ref": "#/components/schemas/length"
          },
          "weight": {
            "$ref": "#/components/schemas/mass"
          },
          "products": {
            "type": "array",
            "description": "Product list in the package",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/productType"
                },
                "ean": {
                  "type": "string",
                  "description": "Product EAN"
                },
                "cug": {
                  "type": "string",
                  "description": "Product CUG"
                },
                "label": {
                  "type": "string",
                  "description": "Product label"
                },
                "quantity": {
                  "type": "integer",
                  "default": 1,
                  "description": "Product quantity in the package"
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "quantity": {
            "type": "integer",
            "description": "Package quantity"
          }
        },
        "required": [
          "length",
          "width",
          "height",
          "weight",
          "quantity"
        ]
      },
      "quote": {
        "title": "Quote (quote)",
        "description": "Informations about the quote.",
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "description": "Quote ID"
          },
          "price": {
            "$ref": "#/components/schemas/price"
          },
          "vehicleType": {
            "$ref": "#/components/schemas/vehicleType"
          }
        }
      },
      "notation": {
        "title": "Client rating (notation)",
        "description": "Specifies the obtained score from client. ",
        "x-examples": {
          "Example": {
            "score": [
              {
                "note": 8,
                "type": "SCORE_TYPE_RECOMMENDATION"
              }
            ],
            "comment": "Awesome !"
          }
        },
        "type": "object",
        "properties": {
          "score": {
            "type": "array",
            "description": "Score list",
            "items": {
              "$ref": "#/components/schemas/score"
            }
          },
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "score",
          "comment"
        ]
      },
      "score": {
        "type": "object",
        "title": "Score (score)",
        "description": "Specifies the obtained score during the delivery.",
        "x-examples": {
          "Recommendation score": {
            "note": 6,
            "type": "SCORE_TYPE_RECOMMENDATION"
          },
          "Satisfaction score": {
            "note": 9,
            "type": "SCORE_TYPE_SATISFACTION"
          }
        },
        "properties": {
          "note": {
            "type": "number",
            "description": "Score out of 10"
          },
          "type": {
            "type": "string",
            "enum": [
              "SCORE_TYPE_RECOMMENDATION",
              "SCORE_TYPE_SATISFACTION"
            ],
            "description": "Score type"
          }
        },
        "required": [
          "note",
          "type"
        ]
      },
      "length": {
        "description": "Specifies the package dimension.",
        "type": "object",
        "title": "Dimension (length)",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": ""
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnit"
          }
        },
        "required": [
          "value",
          "unit"
        ]
      },
      "mass": {
        "description": "Specifies the package/product weight.",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "Weight value"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnit"
          }
        },
        "required": [
          "value",
          "unit"
        ],
        "title": "Weight (mass)"
      },
      "retailer": {
        "title": "Retailer (retailer)",
        "description": "Specifies the informations used to identify the retailer during the delivery. ",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Retailer name"
          },
          "id": {
            "type": "string",
            "description": "Retailer ID"
          },
          "store": {
            "type": "object",
            "required": [
              "id",
              "name",
              "contact"
            ],
            "description": "Retailer store",
            "properties": {
              "id": {
                "type": "string",
                "description": "Store ID"
              },
              "name": {
                "type": "string",
                "description": "Store name"
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          }
        },
        "required": [
          "name",
          "id",
          "store"
        ]
      },
      "price": {
        "description": "Corresponds to the price of the quote",
        "type": "object",
        "title": "Quote price",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "Indicative value of the price",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        }
      },
      "refusedReason": {
        "type": "string",
        "description": "Specifies the possible refusal reasons described in article : \"Motifs de refus\".",
        "title": "Refusal reason (refusedReason)",
        "enum": [
          "REFUSED_AREA",
          "REFUSED_AVAILABILITY",
          "REFUSED_DAY_OFF",
          "REFUSED_EXCEPTION",
          "REFUSED_TIME_NOT_WORKED",
          "REFUSED_TOO_HEAVY",
          "REFUSED_TOO_LARGE"
        ],
        "example": "REFUSED_AREA",
        "x-examples": {
          "Example": "REFUSED_AREA"
        }
      },
      "cancelledReason": {
        "type": "string",
        "enum": [
          "CANCELLED_CANNOT_SERVICE",
          "CANCELLED_UNKNOWN",
          "CANCELLED_PREPARATION_DELAYED",
          "CANCELLED_BY_CLIENT",
          "CANCELLED_NEW_ADDRESS",
          "CANCELLED_INCOMPLETE"
        ],
        "description": "List of all possible cancellation reason for a delivery",
        "title": "Cancellation reason (cancelledReason)",
        "x-examples": {
          "Example": "CANCELLED_CANNOT_SERVICE"
        }
      },
      "deliveryService": {
        "enum": [
          "SERVICE_SELECTED_ROOM",
          "SERVICE_FRONT_HOME",
          "SERVICE_UNPACKING",
          "SERVICE_INSTALL",
          "SERVICE_RECOVERY",
          "SERVICE_PICKUP_POINT",
          "SERVICE_REGULAR_FRONT_HOME",
          "SERVICE_SIMPLE_INSTALL",
          "SERVICE_COMPLEX_INSTALL",
          "SERVICE_ASSEMBLY"
        ],
        "title": "Delivery service (deliveryService)",
        "description": "Specifies the different possible delivery services in the platform.",
        "x-examples": {
          "Example": "SERVICE_SELECTED_ROOM"
        },
        "type": "string"
      },
      "vehicleType": {
        "type": "string",
        "enum": [
          "VEHICLE_TYPE_BIKE",
          "VEHICLE_TYPE_SCOOTER",
          "VEHICLE_TYPE_E_SCOOTER",
          "VEHICLE_TYPE_VAN_SMALL",
          "VEHICLE_TYPE_E_VAN_SMALL",
          "VEHICLE_TYPE_VAN_MEDIUM",
          "VEHICLE_TYPE_PEDESTRIAN",
          "VEHICLE_TYPE_TRUCK",
          "VEHICLE_TYPE_VAN_BIG",
          "VEHICLE_TYPE_E_VAN_BIG",
          "VEHICLE_TYPE_BIKE_CARGO",
          "VEHICLE_TYPE_CAR",
          "VEHICLE_TYPE_E_CAR"
        ],
        "title": "Vehicle type (vehicleType)",
        "description": "Specifies the vehicle type used during the delivery.",
        "x-examples": {
          "Example": "VEHICLE_TYPE_BIKE"
        }
      },
      "productType": {
        "type": "string",
        "enum": [
          "TYPOLOGY_GENERIC",
          "TYPOLOGY_GROCERY",
          "TYPOLOGY_FRESH",
          "TYPOLOGY_FROZEN",
          "TYPOLOGY_DANGEROUS",
          "TYPOLOGY_HOUSEHOLD",
          "TYPOLOGY_VOLUMINOUS",
          "TYPOLOGY_FRAGILE",
          "TYPOLOGY_VOLUMINOUS_FRAGILE",
          "TYPOLOGY_LARGE_HOUSEHOLD",
          "TYPOLOGY_PALLET_GENERIC",
          "TYPOLOGY_NON_STANDARD"
        ],
        "title": "Product typology (productType)",
        "description": "Specifies the product typology.",
        "x-examples": {
          "Example": "TYPOLOGY_GENERIC"
        }
      },
      "currency": {
        "type": "string",
        "enum": [
          "EUR"
        ],
        "description": "Specifies the currency used.",
        "title": "Currency (currency)",
        "x-examples": {
          "Example": "EUR"
        }
      },
      "lengthUnit": {
        "type": "string",
        "enum": [
          "mm",
          "cm",
          "m",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "description": "Specifies the length unit.",
        "default": "cm",
        "title": "Measure unit (lengthUnit)"
      },
      "massUnit": {
        "type": "string",
        "enum": [
          "mcg",
          "mg",
          "g",
          "kg",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "description": "Specifies the weight unit.",
        "default": "kg",
        "title": "Weight unit (massUnit)",
        "x-examples": {
          "Example": "kg"
        }
      },
      "withoutContact": {
        "required": [
          "address",
          "interval"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/addressWithoutSensitiveData"
          },
          "infos": {
            "type": "string"
          },
          "interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interval"
            }
          }
        },
        "title": "Informations about picking/delivery address.",
        "description": "Informations about picking/delivery address."
      },
      "withContact": {
        "required": [
          "address",
          "interval",
          "contact"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "infos": {
            "type": "string"
          },
          "interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interval"
            }
          },
          "contact": {
            "$ref": "#/components/schemas/contact"
          }
        },
        "title": "Informations about picking address.",
        "description": "Informations about picking address."
      },
      "withContactAndLocalization": {
        "required": [
          "address",
          "interval",
          "contact"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "infos": {
            "type": "string"
          },
          "interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interval"
            }
          },
          "contact": {
            "$ref": "#/components/schemas/contactWithLocalization"
          }
        },
        "title": "Informations about delivery address.",
        "description": "Informations about delivery address."
      },
      "postQuote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/deliveryInformations"
          },
          {
            "required": [
              "picking",
              "delivery"
            ],
            "properties": {
              "picking": {
                "$ref": "#/components/schemas/withoutContact"
              },
              "delivery": {
                "$ref": "#/components/schemas/withoutContact"
              }
            }
          }
        ],
        "description": "Necessary informations to create a delivery quote.",
        "title": "Quote request informations (postQuote)"
      },
      "postDelivery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/postDeliveryInformations"
          },
          {
            "required": [
              "quoteId",
              "picking",
              "delivery"
            ],
            "properties": {
              "picking": {
                "$ref": "#/components/schemas/withContact"
              },
              "delivery": {
                "$ref": "#/components/schemas/withContactAndLocalization"
              }
            }
          }
        ],
        "title": "Delivery request (postDelivery)",
        "description": "Specifies the informations used to create a delivery."
      },
      "deliveryInformations": {
        "description": "Delivery informations.",
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Unique order ID to be filled by the retailer"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Order reference, number associated to a store. Can be equal to orderId."
          },
          "productsPrice": {
            "$ref": "#/components/schemas/productPrice"
          },
          "retailer": {
            "$ref": "#/components/schemas/retailer"
          },
          "packages": {
            "type": "array",
            "description": "Handling unit at retailers own. Generally used as the whole order products grouped by package.",
            "items": {
              "$ref": "#/components/schemas/package"
            }
          },
          "services": {
            "$ref": "#/components/schemas/services"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          }
        },
        "required": [
          "orderId",
          "referenceNumber",
          "retailer",
          "packages",
          "services"
        ],
        "title": "Delivery informations (deliveryInformations)",
        "x-examples": {
          "Example": {
            "orderId": "65zq1d5qz1d56q1",
            "referenceNumber": "65zq1d5qz1d56q1-456",
            "retailer": {
              "name": "Retailer A",
              "id": "ret123",
              "store": {
                "id": "store123",
                "name": "Store C",
                "contact": {
                  "firstName": "Pierre",
                  "lastName": "Dupond",
                  "phone": "+33600000000",
                  "email": "pierre.dupond@mail.fr"
                }
              }
            },
            "picking": {
              "contact": {
                "firstName": "Michel",
                "lastName": "Dupont",
                "phone": "+33600000000",
                "email": "michel.dupont@mail.fr"
              },
              "address": {
                "addressLine1": "237 rue du Ballon",
                "addressLine2": "Niji",
                "postalCode": "59110",
                "city": "La Madeleine",
                "country": "FR"
              },
              "infos": "Road works.",
              "interval": [
                {
                  "start": "2019-12-04T12:30:00+0000",
                  "end": "2019-12-04T13:30:00+0000"
                }
              ]
            },
            "delivery": {
              "contact": {
                "firstName": "John",
                "lastName": "Doe",
                "phone": "+33600000000",
                "email": "john.doe@mail.fr",
                "language": "fr-FR",
                "timezone": "Europe/Paris"
              },
              "address": {
                "addressLine1": "165 avenue de Bretagne",
                "elevator": true,
                "floor": 2,
                "postalCode": "59000",
                "city": "Lille",
                "country": "FR"
              },
              "interval": [
                {
                  "start": "2019-12-06T13:00:00+0000",
                  "end": "2019-12-06T15:00:00+0000"
                }
              ]
            },
            "packages": [
              {
                "length": {
                  "value": 15,
                  "unit": "cm"
                },
                "width": {
                  "value": 35.5,
                  "unit": "cm"
                },
                "height": {
                  "value": 1.25,
                  "unit": "m"
                },
                "weight": {
                  "value": 12.35,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4897567123548",
                    "cug": "e21fe21",
                    "label": "Wardrobe",
                    "quantity": 1
                  }
                ],
                "reference": "1234A",
                "quantity": 1
              }
            ],
            "services": [
              "SERVICE_SELECTED_ROOM"
            ]
          }
        }
      },
      "postDeliveryInformations": {
        "title": "Delivery request informations (postDeliveryInformations)",
        "description": "Delivery request informations.",
        "type": "object",
        "x-examples": {
          "example": {
            "orderId": "string",
            "quoteId": "string",
            "referenceNumber": "string",
            "productsPrice": {
              "value": 0,
              "currency": "EUR"
            },
            "retailer": {
              "name": "string",
              "id": "string",
              "store": {
                "id": "string",
                "name": "string",
                "contact": {
                  "firstName": "string",
                  "lastName": "string",
                  "phone": "string",
                  "email": "string"
                }
              }
            },
            "packages": [
              {
                "references": [
                  "string"
                ],
                "length": {
                  "value": 0,
                  "unit": "cm"
                },
                "width": {
                  "value": 0,
                  "unit": "cm"
                },
                "height": {
                  "value": 0,
                  "unit": "cm"
                },
                "weight": {
                  "value": 0,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "string",
                    "cug": "string",
                    "label": "string",
                    "quantity": 1
                  }
                ],
                "quantity": 0
              }
            ],
            "services": [
              "SERVICE_SELECTED_ROOM"
            ],
            "tags": [
              {
                "key": "origin",
                "value": "web"
              }
            ]
          }
        },
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Unique order ID to be filled by the retailer"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Order reference, number associated to a store. Can be equal to orderId."
          },
          "productsPrice": {
            "$ref": "#/components/schemas/productPrice"
          },
          "retailer": {
            "$ref": "#/components/schemas/retailer"
          },
          "packages": {
            "type": "array",
            "description": "Whole packages",
            "items": {
              "$ref": "#/components/schemas/package"
            }
          },
          "services": {
            "$ref": "#/components/schemas/services"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "quoteId": {
            "type": "string",
            "description": "Order quote ID"
          }
        },
        "required": [
          "orderId",
          "referenceNumber",
          "retailer",
          "packages",
          "services",
          "quoteId"
        ]
      },
      "deliveryCreated": {
        "type": "object",
        "properties": {
          "deliveryId": {
            "type": "string",
            "description": "Unique delivery ID"
          }
        },
        "description": "Delivery creation response informations.",
        "title": "Response informations (deliveryCreated)",
        "x-examples": {
          "Example": {
            "deliveryId": "1123663GHG"
          }
        }
      },
      "deliveryCreatedReference": {
        "properties": {
          "deliveryId": {
            "type": "string"
          },
          "externalReference": {
            "type": "string"
          }
        },
        "title": "Response informations : Creation of a delivery with a reference (deliveryCreatedPackages))",
        "description": "Informations about delivery creation with reference response"
      },
      "deliveryCreatedPackages": {
        "allOf": [
          {
            "$ref": "#/components/schemas/deliveryCreated"
          },
          {
            "type": "object",
            "properties": {
              "packages": {
                "type": "array",
                "description": "Informations about packages",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "title": "Response informations : Creation of a delivery with a package (deliveryCreatedPackages))",
        "description": "Informations about delivery creation with a package response",
        "x-examples": {
          "Example": {
            "deliveryId": "113123765",
            "packages": [
              {
                "id": "JU7798"
              }
            ]
          }
        }
      },
      "coordinates": {
        "type": "object",
        "description": "Specifies the geographic coordinates to use for the creation.",
        "x-examples": {
          "Example": {
            "latitude": 50.63833,
            "longitude": 3.077359
          }
        },
        "title": "Geographic coordinates (coordinates)",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "interval_hour": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "time"
          },
          "end": {
            "type": "string",
            "format": "time"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Example": {
            "start": "14:00",
            "end": "18:00"
          }
        },
        "description": "Specifies the openning date interval.",
        "title": "Hour interval (interval_hour)"
      },
      "productPrice": {
        "description": "Corresponds with products selling price. Filled if delivery is realized with service “SERVICE_INSTALL”.",
        "type": "object",
        "title": "Products selling price (price)",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "Price value",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        }
      }
    },
    "parameters": {
      "queryLatitude": {
        "in": "query",
        "required": true,
        "description": "Searching point latitude",
        "name": "latitude",
        "schema": {
          "type": "number"
        }
      },
      "queryLongitude": {
        "in": "query",
        "description": "Searching point longitude",
        "required": true,
        "name": "longitude",
        "schema": {
          "type": "number"
        }
      },
      "queryNumber": {
        "in": "query",
        "required": false,
        "description": "Number of returned pickup points",
        "name": "number",
        "schema": {
          "type": "integer",
          "maximum": 25,
          "default": 10
        }
      },
      "queryKilometricDistance": {
        "in": "query",
        "required": false,
        "description": "Distance in kilometers of searching radius",
        "name": "kilometricDistance",
        "schema": {
          "type": "integer",
          "maximum": 40,
          "default": 5
        }
      },
      "queryPickupPointType": {
        "in": "query",
        "required": false,
        "name": "type",
        "description": "Pickup point type",
        "schema": {
          "type": "string",
          "enum": [
            "PICKUP_POINT_AGENCY",
            "PICKUP_POINT_POST_OFFICE",
            "PICKUP_POINT_RELAY_WITH_LOCKER",
            "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
            "PICKUP_POINT_ALL"
          ],
          "default": "PICKUP_POINT_RELAY_WITH_LOCKER"
        }
      },
      "queryPickupPointCategory": {
        "in": "query",
        "required": false,
        "name": "category",
        "description": "pickup point category",
        "schema": {
          "type": "string",
          "enum": [
            "PICKUP_POINT_STANDARD",
            "PICKUP_POINT_XL",
            "PICKUP_POINT_XXL",
            "PICKUP_POINT_DRIVE"
          ]
        }
      },
      "pathQuoteId": {
        "in": "path",
        "required": true,
        "description": "Quote ID",
        "name": "quoteId",
        "schema": {
          "type": "string"
        }
      },
      "pathDeliveryId": {
        "in": "path",
        "required": true,
        "name": "deliveryId",
        "description": "Delivery ID",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "APIKey-1": {
        "name": "API Key",
        "type": "apiKey",
        "in": "query"
      }
    }
  },
  "servers": [
    {
      "url": "",
      "description": ""
    }
  ],
  "tags": [
    {
      "name": "Delivery"
    },
    {
      "name": "Quotes"
    },
    {
      "name": "Pickup point"
    },
    {
      "name": "Package"
    }
  ]
}