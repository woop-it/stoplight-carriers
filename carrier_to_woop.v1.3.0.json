{
  "openapi": "3.0.2",
  "info": {
    "title": "Carrier to Woop",
    "description": "This document contains the technical information about Woop APIs for carriers. For any questions or clarifications, please contact the internal technical team.\n\nTo use Carrier to Woop APIs, you must use the confidential access codes provided when you created your carrier account on the platform.\n\nThe version currently available in the documentation is <b>Version 1.3.0</b>",
    "version": "1.3.0"
  },
  "servers": [
    {
      "url": "car-api.recette.gcp.last-mile.fr",
      "description": "Receipt URL"
    },
    {
      "url": "car-api.preprod.gcp.last-mile.fr",
      "description": "Preprod URL"
    },
    {
      "url": "carrier.last-mile.fr",
      "description": "Prod URL"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Check whether the application is functioning.",
        "operationId": "getHealth",
        "responses": {
          "204": {
            "description": "The service is functioning"
          }
        },
        "security": [],
        "summary": "Health"
      }
    },
    "/deliveries/{deliveryId}/status": {
      "put": {
        "description": "Allows you to update the status of an order for a delivery in progress. The information is sent to Woop to track the progress of the order.\n<a href=\"/docs/carrier/docs/Modèles/Statuts-de-livraison.md\">Workflow and status list</a>",
        "operationId": "putDeliveryStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the new delivery status information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/deliveryStatus"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "team": {
                    "$ref": "#/components/schemas/team"
                  },
                  "additionalData": {
                    "$ref": "#/components/schemas/additionalData"
                  },
                  "appointment": {
                    "$ref": "#/components/schemas/appointment"
                  }
                },
                "required": [
                  "status",
                  "date",
                  "comment"
                ]
              },
              "examples": {
                "Livraison livrée conforme": {
                  "value": {
                    "status": "DELIVERY_DELIVERED_OK",
                    "date": "2019-11-27T10:30:00+0000",
                    "comment": "I waited for 15 mins",
                    "team": {
                      "members": [
                        {
                          "id": "ZER784"
                        }
                      ]
                    },
                    "additionalData": [
                      {
                        "key": "my_personnal_key",
                        "value": "personal data"
                      }
                    ]
                  }
                },
                "Livraison replanifiée": {
                  "value": {
                    "status": "DELIVERY_REPLANNED",
                    "date": "2019-11-27T10:30:00+0000",
                    "comment": "Customer not present.",
                    "appointment": {
                      "start": "2021-03-12T10:30:00+0000",
                      "end": "2021-03-12T11:30:00+0000"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "The status can no longer be updated"
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          },
          "409": {
            "description": "An action is already in progress on this delivery"
          }
        },
        "summary": "Mise à jour de statut d'une livraison",
        "tags": [
          "Livraison"
        ]
      }
    },
    "/deliveries/{deliveryId}/packages/{packageId}/status": {
      "put": {
        "description": "Allows you to update the status of a specific package for an order in progress. The information is sent to Woop to track the progress of the package.\n<a href=\"/docs/carrier/docs/Modèles/Statuts-de-livraison.md\">Workflow and status list</a>",
        "operationId": "putPackageStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          },
          {
            "in": "path",
            "name": "packageId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Package ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains new information on the status of the package",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/deliveryStatus"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "team": {
                    "$ref": "#/components/schemas/team"
                  }
                },
                "required": [
                  "status",
                  "date",
                  "comment"
                ]
              },
              "examples": {
                "Livraison livrée conforme": {
                  "value": {
                    "status": "DELIVERY_DELIVERED_OK",
                    "date": "2019-11-27T10:30:00+0000",
                    "comment": "I waited outside for 5 mins.",
                    "team": {
                      "members": [
                        {
                          "id": "ZER784"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "The status can no longer be edited"
          },
          "404": {
            "description": "The 'deliveryId' or 'packageId' was not found"
          }
        },
        "summary": "Mise à jour du statut d'un colis",
        "tags": [
          "Livraison"
        ]
      }
    },
    "/deliveries/{deliveryId}/deltaCosts": {
      "put": {
        "tags": [
          "Livraison"
        ],
        "description": "Adding an additional charge or discount to a delivery.",
        "operationId": "putDeliveryDeltaCosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains delta cost information.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "reason",
                  "currency",
                  "date"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "reason": {
                    "$ref": "#/components/schemas/deltaCostReason"
                  },
                  "currency": {
                    "$ref": "#/components/schemas/currency"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime"
                  }
                }
              },
              "examples": {
                "Annulation tardive": {
                  "value": {
                    "amount": 165.98,
                    "currency": "EUR",
                    "reason": "DELTACOST_LATE_CANCELLATION",
                    "comment": "Order cancelled 5 mins before delivery.",
                    "date": "2019-11-27T10:30:00+0000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "Additional charges can no longer be issued"
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Ajout de frais supplémentaire ou de remise d'une livraison"
      }
    },
    "/deliveries/{deliveryId}/closure": {
      "post": {
        "tags": [
          "Livraison"
        ],
        "description": "Adding billing information for a delivery.",
        "operationId": "postDeliveryClosure",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains billing information.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "emittedCarbonDioxide",
                  "billedDistance",
                  "vehicleType"
                ],
                "properties": {
                  "emittedCarbonDioxide": {
                    "$ref": "#/components/schemas/mass"
                  },
                  "billedDistance": {
                    "$ref": "#/components/schemas/length"
                  },
                  "vehicleType": {
                    "$ref": "#/components/schemas/vehicleType"
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "emittedCarbonDioxide": {
                      "value": 13.5,
                      "unit": "mg"
                    },
                    "billedDistance": {
                      "value": 5,
                      "unit": "km"
                    },
                    "vehicleType": "VEHICLE_TYPE_SCOOTER"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "Additional charges can no longer be issued"
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Ajout d'informations de facturation d'une livraison"
      }
    },
    "/deliveries/{deliveryId}/events": {
      "post": {
        "tags": [
          "Livraison"
        ],
        "description": "Adding a delivery event.",
        "operationId": "postDeliveryEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the information of the notification sent.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "status",
                  "type",
                  "date",
                  "subject",
                  "message"
                ],
                "properties": {
                  "status": {
                    "type": "boolean",
                    "description": "'true' if the event is successful"
                  },
                  "type": {
                    "type": "string",
                    "description": "Notification type",
                    "enum": [
                      "EVENT_TYPE_SMS",
                      "EVENT_TYPE_MAIL",
                      "EVENT_TYPE_CALL"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "description": "Event time",
                    "format": "datetime"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Event subject",
                    "enum": [
                      "DELIVERY_INIT",
                      "DELIVERY_STARTED",
                      "DELIVERY_PICK_UP_REACHED",
                      "DELIVERY_PICK_UP_OK",
                      "DELIVERY_IN_PROGRESS",
                      "DELIVERY_AT_DROP_OF_LOCATION",
                      "DELIVERY_PICK_UP_FAILED",
                      "DELIVERY_DELIVERED_WITH_CLAIM",
                      "DELIVERY_CANCELLED_WITH_RETURN",
                      "DELIVERY_FAILED_WITH_RETURN",
                      "DELIVERY_RETURNED_TO_PICK_UP",
                      "DELIVERY_DELIVERED_OK",
                      "DELIVERY_CANCELLED"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Information message about the event"
                  },
                  "failReason": {
                    "type": "string",
                    "description": "Reason for event failure"
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "status": true,
                    "type": "EVENT_TYPE_SMS",
                    "date": "2019-11-27T10:30:00+0000",
                    "subject": "DELIVERY_INIT",
                    "message": "Bonjour, votre commande a bien été confirmée."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Ajout d'un évènement d'une livraison"
      }
    },
    "/subscriptions": {
      "post": {
        "description": "Endpoint for initiating exchanges with carrier APIs.",
        "operationId": "postSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains subscription information",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "callbacks"
                ],
                "properties": {
                  "callbacks": {
                    "type": "object",
                    "required": [
                      "quote",
                      "delivery",
                      "cancelDelivery"
                    ],
                    "properties": {
                      "quote": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route for obtaining quotes"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "delivery": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to validate a quote"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "cancelDelivery": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to cancel a delivery order"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "cancelQuote": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to cancel a quote"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "score": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to provide a rating for the carrier of an order"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "pickupPoint": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to provide the list of relay points"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "price": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to request a quote"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "label": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to generate and retrieve a label"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to retrieve status by 'package'"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "update": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to update a delivery order"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      }
                    }
                  },
                  "adapter": {
                    "type": "string",
                    "description": "Allows you to indicate the name of the service used in LMMP to convert the data format of selected Carrier APIs.",
                    "example": "XMLAdapter"
                  },
                  "headers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "auth": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/postSubscriptionBasic"
                      },
                      {
                        "$ref": "#/components/schemas/postSubscriptionOAuth2"
                      },
                      {
                        "$ref": "#/components/schemas/postSubscriptionToken"
                      }
                    ]
                  }
                }
              },
              "examples": {
                "Basic": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.4.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.4.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.4.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.4.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.4.0"
                      }
                    },
                    "headers": [
                      {
                        "key": "x-api-key",
                        "value": "KHJKO8U9"
                      }
                    ],
                    "auth": {
                      "basic": {
                        "username": "admin",
                        "password": "1234"
                      }
                    }
                  }
                },
                "OAuth2": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.4.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.4.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.4.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.4.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.4.0"
                      },
                      "price": {
                        "url": "https://my_url/price",
                        "version": "1.4.0"
                      }
                    },
                    "auth": {
                      "oauth2": {
                        "client_id": "8664fb6e578be877cdd16e2c13e1db3e",
                        "client_secret": "4bb43097953c6d3ffae77b77f4716bba",
                        "audience": "carrier.last-mile.fr",
                        "grant_type": "client_credentials",
                        "tokenEndPoint": "token.last-mile.fr"
                      }
                    }
                  }
                },
                "Token": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.4.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.4.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.4.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.4.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.4.0"
                      }
                    },
                    "auth": {
                      "token": {
                        "username": "admin",
                        "password": "1234",
                        "endpoint": "token.last-mile.fr"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          }
        },
        "summary": "Ajout de souscriptions",
        "tags": [
          "Souscriptions"
        ]
      }
    },
    "/deliveries/{deliveryId}/documents": {
      "post": {
        "tags": [
          "Document"
        ],
        "description": "Adding a document and its information in form-data format.\n\n[See the documentation for more information](https://woop.stoplight.io/docs/carrier/docs/Bases/Upload-dun-document.md)",
        "operationId": "postDeliveryDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the information for the document sent in form-data format.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "description": "The document in binary format, 10mb max",
                    "format": "binary"
                  },
                  "type": {
                    "type": "string",
                    "description": "Document type",
                    "enum": [
                      "EVIDENCE",
                      "INVOICE",
                      "CONTRACT"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "description": "Creation date of the document",
                    "format": "datetime"
                  }
                },
                "required": [
                  "document",
                  "type",
                  "date"
                ]
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "document": "<file stream>",
                    "type": "EVIDENCE",
                    "date": "2019-11-27T10:30:00+0000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Ajout d'un document d'une livraison"
      }
    }
  },
  "components": {
    "schemas": {
      "currency": {
        "type": "string",
        "enum": [
          "EUR"
        ],
        "title": "Currency (currency)",
        "description": "Currency, specifies the currency used.",
        "x-examples": {
          "example": "EUR"
        }
      },
      "deliveryStatus": {
        "type": "string",
        "enum": [
          "DELIVERY_STARTED",
          "DELIVERY_PICK_UP_REACHED",
          "DELIVERY_PICK_UP_OK",
          "DELIVERY_PICK_UP_PARTIALLY",
          "DELIVERY_IN_PROGRESS",
          "DELIVERY_AT_DROP_OF_LOCATION",
          "DELIVERY_PICK_UP_FAILED",
          "DELIVERY_DELIVERED_WITH_CLAIM",
          "DELIVERY_CANCELLED_WITH_RETURN",
          "DELIVERY_FAILED_WITH_RETURN",
          "DELIVERY_RETURNED_TO_PICK_UP",
          "DELIVERY_DELIVERED_OK",
          "DELIVERY_DELIVERED_PARTIALLY",
          "DELIVERY_CANCELLED",
          "DELIVERY_REPLANNED"
        ],
        "title": "Status of delivery (deliveryStatus)",
        "description": "Specifies the different delivery statuses available on the platform. ",
        "x-examples": {
          "example": "DELIVERY_STARTED"
        }
      },
      "deltaCostReason": {
        "type": "string",
        "enum": [
          "DELTACOST_EXTEND_WAITING_WAREHOUSE",
          "DELTACOST_EXTEND_WAITING_CUSTOMER",
          "DELTACOST_WRONG_FLOOR",
          "DELTACOST_WRONG_CONTENT",
          "DELTACOST_WAREHOUSE_RETURN",
          "DELTACOST_LATE_CANCELLATION",
          "DELTACOST_PICKUP_FAILED",
          "DELTACOST_PARTIALLY_DELIVERED",
          "DELTACOST_UNKNOWN"
        ],
        "title": "deltaCost reason (deltaCostReason)",
        "x-examples": {
          "example": "DELTACOST_EXTEND_WAITING_WAREHOUSE"
        },
        "description": "Specifies the carrier reason for creating a deltaCost. "
      },
      "length": {
        "required": [
          "value",
          "unit"
        ],
        "properties": {
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnits"
          }
        },
        "title": "Dimension (length)",
        "description": "Specifies the size of a package.",
        "x-examples": {
          "example": {
            "value": 200,
            "unit": "mm"
          }
        }
      },
      "mass": {
        "required": [
          "value",
          "unit"
        ],
        "properties": {
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnits"
          }
        },
        "description": "Specifies the weight of a package/product.",
        "title": "Weight (mass)",
        "x-examples": {
          "example": {
            "value": 1,
            "unit": "kg"
          }
        }
      },
      "lengthUnits": {
        "type": "string",
        "enum": [
          "mm",
          "cm",
          "m",
          "km",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "description": "Specifies the unit of length.",
        "title": "Unit of length (lengthUnits)",
        "x-examples": {
          "example": "mm"
        }
      },
      "massUnits": {
        "type": "string",
        "enum": [
          "mcg",
          "mg",
          "g",
          "kg",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "description": "Specifies the unit of weight.",
        "title": "Unit of weight (massUnits)",
        "x-examples": {
          "example": "mcg"
        }
      },
      "postSubscriptionBasic": {
        "description": "Specifies how to generate the Basic subscription token.",
        "x-examples": {
          "example": {
            "basic": {
              "username": "string",
              "password": "string"
            }
          }
        },
        "title": "Subscription token (postSubscriptionBasic)",
        "type": "object",
        "properties": {
          "basic": {
            "type": "object",
            "description": "To be defined if the required API authentication method is basic",
            "properties": {
              "username": {
                "type": "string",
                "description": "User login for the subscription"
              },
              "password": {
                "type": "string",
                "description": "User password for the subscription"
              }
            },
            "required": [
              "username",
              "password"
            ]
          }
        }
      },
      "postSubscriptionOAuth2": {
        "properties": {
          "oauth2": {
            "type": "object",
            "description": "To be defined if the required API authentication method is oauth2",
            "required": [
              "client_id",
              "client_secret",
              "tokenEndPoint"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              },
              "audience": {
                "type": "string"
              },
              "grant_type": {
                "type": "string"
              },
              "tokenEndPoint": {
                "type": "string",
                "description": "URL to retrieve the access token according to the clientId and the clientSecret"
              }
            }
          }
        },
        "title": "Subscription token (postSubscriptionOAuth2)",
        "description": "Specifies how to generate the OAuth2 subscription token.",
        "x-examples": {
          "example": {
            "oauth2": {
              "client_id": "string",
              "client_secret": "string",
              "audience": "string",
              "grant_type": "string",
              "tokenEndPoint": "string"
            }
          }
        }
      },
      "postSubscriptionToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "object",
            "description": "To be defined if the authentication method gives a bearer token from a username/password",
            "properties": {
              "username": {
                "type": "string",
                "description": "User login for the subscription"
              },
              "password": {
                "type": "string",
                "description": "User password for the subscription"
              },
              "endpoint": {
                "type": "string",
                "description": "URL to retrieve the access token"
              }
            },
            "required": [
              "username",
              "password",
              "endpoint"
            ]
          }
        },
        "title": "Subscription token (postSubscriptionBasic)",
        "description": "Specifies how to generate the Bearer subscription token."
      },
      "team": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier of the team managing the delivery"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "required": [
          "members"
        ],
        "description": "Specifies the team managing the delivery. ",
        "title": "Team (team)",
        "x-examples": {
          "example": {
            "members": [
              {
                "id": "012345"
              }
            ]
          }
        }
      },
      "vehicleType": {
        "type": "string",
        "enum": [
          "VEHICLE_TYPE_BIKE",
          "VEHICLE_TYPE_SCOOTER",
          "VEHICLE_TYPE_E_SCOOTER",
          "VEHICLE_TYPE_VAN_SMALL",
          "VEHICLE_TYPE_E_VAN_SMALL",
          "VEHICLE_TYPE_VAN_MEDIUM",
          "VEHICLE_TYPE_PEDESTRIAN",
          "VEHICLE_TYPE_TRUCK",
          "VEHICLE_TYPE_VAN_BIG",
          "VEHICLE_TYPE_E_VAN_BIG",
          "VEHICLE_TYPE_BIKE_CARGO",
          "VEHICLE_TYPE_CAR",
          "VEHICLE_TYPE_E_CAR",
          "VEHICLE_TYPE_UNKNOWN"
        ],
        "description": "Specifies the type of vehicle used for the delivery.",
        "title": "Vehicle type (vehicleType)",
        "x-examples": {
          "example": "VEHICLE_TYPE_BIKE"
        }
      },
      "badRequest": {
        "type": "object",
        "description": "Missing and/or incorrect items in the body",
        "title": "Error 400",
        "x-examples": {
          "Exemple": {
            "reasons": [
              "Missing argument 'xxxxx'"
            ]
          }
        },
        "properties": {
          "reasons": {
            "type": "array",
            "description": "Indication of the error returned",
            "items": {
              "type": "string",
              "example": "Missing argument 'xxxxx'"
            }
          }
        }
      },
      "additionalData": {
        "description": "Allows the carrier to transmit personalised information/data to the brand. ",
        "type": "object",
        "x-examples": {
          "example": {
            "key": "string",
            "value": "string"
          }
        },
        "properties": {
          "key": {
            "type": "string",
            "description": "Title of the information transmitted"
          },
          "value": {
            "type": "string",
            "description": "Value of the information transmitted"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "title": "Additional data"
      },
      "appointment": {
        "description": "Specifies a range of dates and times for customer appointments.",
        "type": "object",
        "x-examples": {
          "example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        },
        "properties": {
          "start": {
            "type": "string",
            "minLength": 1,
            "description": "Start of the time slot"
          },
          "end": {
            "type": "string",
            "minLength": 1,
            "description": "End of the time slot"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "title": "Appointment date (appointment)"
      }
    },
    "parameters": {
      "apiVersion": {
        "in": "header",
        "name": "x-api-version",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1.3.0"
        }
      },
      "pathDeliveryId": {
        "in": "path",
        "name": "deliveryId",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Delivery ID"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {},
        "description": "[See documentation](https://woop.stoplight.io/docs/carrier/docs/Bases/Authentification.md)"
      }
    }
  },
  "tags": [
    {
      "name": "Livraison"
    },
    {
      "name": "Health"
    },
    {
      "name": "Document"
    },
    {
      "name": "Souscriptions"
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ]
}