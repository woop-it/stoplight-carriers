{
  "openapi": "3.0.2",
  "info": {
    "title": "Transporteur vers Woop",
    "description": "Pour commencer, toutes les informations technique concernant les API Woop à destination des transporteurs sont centralisées dans cette documentation. Pour toute question ou précision, merci de contacter l'équipe technique interne.\n\nPour utiliser les API \"Transporteur vers Woop\", vous devez vous munir des vos accès identifiants secret fournis lors de la création de votre compte transporteur au sein de la palteforme.\n\nLa version actuellement proposée dans la documentation est la <b>Version 1.3.0</b>",
    "version": "1.3.0"
  },
  "servers": [
    {
      "url": "car-api.recette.gcp.last-mile.fr",
      "description": "URL de recette"
    },
    {
      "url": "car-api.preprod.gcp.last-mile.fr",
      "description": "URL de preprod"
    },
    {
      "url": "carrier.last-mile.fr",
      "description": "URL de prod"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Contrôle si l'application est opérationnelle.",
        "operationId": "getHealth",
        "responses": {
          "204": {
            "description": "Le service est opérationnel"
          }
        },
        "security": [],
        "summary": "Health"
      }
    },
    "/deliveries/{deliveryId}/status": {
      "put": {
        "description": "Permet de mettre à jour le statut d'une commande pour une livraison en cours. L'information est transmise à Woop afin de suivre le parcours de la commande.\n<a href=\"/docs/carrier/docs/Modèles/Statuts-de-livraison.md\">Workflow et liste des status</a>",
        "operationId": "putDeliveryStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations du nouveau statut de livraison",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/deliveryStatus"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "team": {
                    "$ref": "#/components/schemas/team"
                  }
                },
                "required": [
                  "status",
                  "date",
                  "comment"
                ]
              },
              "examples": {
                "Livraison livrée conforme": {
                  "value": {
                    "status": "DELIVERY_DELIVERED_OK",
                    "date": "2019-11-27T10:30:00+0000",
                    "comment": "J'ai attendu 5min dehors.",
                    "team": {
                      "members": [
                        {
                          "id": "ZER784"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          },
          "403": {
            "description": "Le status ne peut plus être edité"
          },
          "404": {
            "description": "Le 'deliveryId' n'a pas été trouvé"
          }
        },
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "summary": "Mise à jour de statut d'une livraison",
        "tags": [
          "Livraison"
        ]
      }
    },
    "/deliveries/{deliveryId}/packages/{packageId}/status": {
      "put": {
        "description": "Permet de mettre à jour le statut d'une commande pour un colis en cours. L'information est transmise à Woop afin de suivre le parcours de la commande.\n<a href=\"/docs/carrier/docs/Modèles/Statuts-de-livraison.md\">Workflow et liste des status</a>",
        "operationId": "putPackageStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          },
          {
            "in": "path",
            "name": "packageId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id du colis"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations du nouveau statut de colis",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/deliveryStatus"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "team": {
                    "$ref": "#/components/schemas/team"
                  }
                },
                "required": [
                  "status",
                  "date",
                  "comment"
                ]
              },
              "examples": {
                "Livraison livrée conforme": {
                  "value": {
                    "status": "DELIVERY_DELIVERED_OK",
                    "date": "2019-11-27T10:30:00+0000",
                    "comment": "J'ai attendu 5min dehors.",
                    "team": {
                      "members": [
                        {
                          "id": "ZER784"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          },
          "403": {
            "description": "Le status ne peut plus être edité"
          },
          "404": {
            "description": "Le 'deliveryId' ou 'packageId' n'a pas été trouvé"
          }
        },
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "summary": "Mise à jour de statut d'un colis",
        "tags": [
          "Livraison"
        ]
      }
    },
    "/deliveries/{deliveryId}/deltaCosts": {
      "put": {
        "tags": [
          "Livraison"
        ],
        "description": "Ajout de frais supplémentaire ou de remise d'une livraison.",
        "operationId": "putDeliveryDeltaCosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations du delta cost.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "reason",
                  "currency",
                  "date"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "reason": {
                    "$ref": "#/components/schemas/deltaCostReason"
                  },
                  "currency": {
                    "$ref": "#/components/schemas/currency"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime"
                  }
                }
              },
              "examples": {
                "Annulation tardive": {
                  "value": {
                    "amount": 165.98,
                    "currency": "EUR",
                    "reason": "DELTACOST_LATE_CANCELLATION",
                    "comment": "Commande annulée 5min avant livraison.",
                    "date": "2019-11-27T10:30:00+0000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          },
          "403": {
            "description": "Des frais supplémentaires ne peuvent plus être envoyés"
          },
          "404": {
            "description": "Le 'deliveryId' n'a pas été trouvé"
          }
        },
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "summary": "Ajout de frais supplémentaire ou de remise d'une livraison"
      }
    },
    "/deliveries/{deliveryId}/closure": {
      "post": {
        "tags": [
          "Livraison"
        ],
        "description": "Ajout des informations de facturation d'une livraison.",
        "operationId": "postDeliveryClosure",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de facturation.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "emittedCarbonDioxide",
                  "billedDistance",
                  "vehicleType"
                ],
                "properties": {
                  "emittedCarbonDioxide": {
                    "$ref": "#/components/schemas/mass"
                  },
                  "billedDistance": {
                    "$ref": "#/components/schemas/length"
                  },
                  "vehicleType": {
                    "$ref": "#/components/schemas/vehicleType"
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "emittedCarbonDioxide": {
                      "value": 13.5,
                      "unit": "mg"
                    },
                    "billedDistance": {
                      "value": 5,
                      "unit": "km"
                    },
                    "vehicleType": "VEHICLE_TYPE_SCOOTER"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          },
          "403": {
            "description": "Des frais supplémentaires ne peuvent plus être envoyés"
          },
          "404": {
            "description": "Le 'deliveryId' n'a pas été trouvé"
          }
        },
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "summary": "Ajout d'informations de facturation d'une livraison"
      }
    },
    "/deliveries/{deliveryId}/events": {
      "post": {
        "tags": [
          "Livraison"
        ],
        "description": "Ajout d'un évènement d'une livraison.",
        "operationId": "postDeliveryEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de la notification envoyée.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "status",
                  "type",
                  "date",
                  "subject",
                  "message"
                ],
                "properties": {
                  "status": {
                    "type": "boolean",
                    "description": "'true' si l'évènement est réussi"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type de notification",
                    "enum": [
                      "EVENT_TYPE_SMS",
                      "EVENT_TYPE_MAIL",
                      "EVENT_TYPE_CALL"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "description": "Heure de l'évènement",
                    "format": "datetime"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Sujet de l'évènement",
                    "enum": [
                      "DELIVERY_INIT",
                      "DELIVERY_STARTED",
                      "DELIVERY_PICK_UP_REACHED",
                      "DELIVERY_PICK_UP_OK",
                      "DELIVERY_IN_PROGRESS",
                      "DELIVERY_AT_DROP_OF_LOCATION",
                      "DELIVERY_PICK_UP_FAILED",
                      "DELIVERY_DELIVERED_WITH_CLAIM",
                      "DELIVERY_CANCELLED_WITH_RETURN",
                      "DELIVERY_FAILED_WITH_RETURN",
                      "DELIVERY_RETURNED_TO_PICK_UP",
                      "DELIVERY_DELIVERED_OK",
                      "DELIVERY_CANCELLED"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Message d'information à propos de l'évènement"
                  },
                  "failReason": {
                    "type": "string",
                    "description": "Raison de l'échec de l'évènement"
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "status": true,
                    "type": "EVENT_TYPE_SMS",
                    "date": "2019-11-27T10:30:00+0000",
                    "subject": "DELIVERY_INIT",
                    "message": "Bonjour, votre commande a bien été confirmée."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          },
          "404": {
            "description": "Le 'deliveryId' n'a pas été trouvé"
          }
        },
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "summary": "Ajout d'un évènement d'une livraison"
      }
    },
    "/subscriptions": {
      "post": {
        "description": "Endpoint d'initialisation d'échanges avec les APIs transporteur.",
        "operationId": "postSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de souscription",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "callbacks"
                ],
                "properties": {
                  "callbacks": {
                    "type": "object",
                    "required": [
                      "quote",
                      "delivery",
                      "cancelDelivery"
                    ],
                    "properties": {
                      "quote": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant d'obtenir des devis"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir woop vers transporteur)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "delivery": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant de valider un devis"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir woop vers transporteur)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "cancelDelivery": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant d'annuler un ordre de livraison"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "cancelQuote": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant d'annuler un devis"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "score": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant de fournir la note du transporteur d'une commande"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "pickupPoint": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant de fournir la liste des points relais"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "price": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant de faire une demande de prix"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "label": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant de générer et récupérer une étiquette"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant de récupérer les statuts par 'package'"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      },
                      "update": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route permettant de mettre à jour un ordre de livraison"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback (voir lastmile_to_carrier)",
                            "example": "1.4.0"
                          }
                        }
                      }
                    }
                  },
                  "adapter": {
                    "type": "string",
                    "description": "Permet d'indiquer le nom du service utilisé dans LMMP pour convertir le format de données de certaines APIs du Transporteur.",
                    "example": "XMLAdapter"
                  },
                  "headers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "auth": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/postSubscriptionBasic"
                      },
                      {
                        "$ref": "#/components/schemas/postSubscriptionOAuth2"
                      },
                      {
                        "$ref": "#/components/schemas/postSubscriptionToken"
                      }
                    ]
                  }
                }
              },
              "examples": {
                "Basic": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.4.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.4.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.4.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.4.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.4.0"
                      }
                    },
                    "headers": [
                      {
                        "key": "x-api-key",
                        "value": "KHJKO8U9"
                      }
                    ],
                    "auth": {
                      "basic": {
                        "username": "admin",
                        "password": "1234"
                      }
                    }
                  }
                },
                "OAuth2": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.4.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.4.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.4.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.4.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.4.0"
                      },
                      "price": {
                        "url": "https://my_url/price",
                        "version": "1.4.0"
                      }
                    },
                    "auth": {
                      "oauth2": {
                        "client_id": "8664fb6e578be877cdd16e2c13e1db3e",
                        "client_secret": "4bb43097953c6d3ffae77b77f4716bba",
                        "audience": "carrier.last-mile.fr",
                        "grant_type": "client_credentials",
                        "tokenEndPoint": "token.last-mile.fr"
                      }
                    }
                  }
                },
                "Token": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.4.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.4.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.4.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.4.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.4.0"
                      }
                    },
                    "auth": {
                      "token": {
                        "username": "admin",
                        "password": "1234",
                        "endpoint": "token.last-mile.fr"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          }
        },
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "summary": "Ajout de souscriptions",
        "tags": [
          "Souscriptions"
        ]
      }
    },
    "/deliveries/{deliveryId}/documents": {
      "post": {
        "tags": [
          "Document"
        ],
        "description": "Ajout d'un document",
        "operationId": "postDeliveryDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations du document envoyé.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "description": "Le document sous format binaire, max 10mb",
                    "format": "binary"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type de document",
                    "enum": [
                      "EVIDENCE",
                      "INVOICE",
                      "CONTRACT"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "description": "Date de création du document",
                    "format": "datetime"
                  }
                },
                "required": [
                  "document",
                  "type",
                  "date"
                ]
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "document": "file stream",
                    "type": "EVIDENCE",
                    "date": "2019-11-27T10:30:00+0000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          },
          "404": {
            "description": "Le 'deliveryId' n'a pas été trouvé"
          }
        },
        "security": [
          {
            "oAuth2ClientCredentials": []
          }
        ],
        "summary": "Ajout d'un document d'une livraison"
      }
    }
  },
  "components": {
    "schemas": {
      "currency": {
        "type": "string",
        "enum": [
          "EUR"
        ],
        "title": "Devise (currency)",
        "description": "Devise, précise la monnaie utilisée.",
        "x-examples": {
          "example": "EUR"
        }
      },
      "deliveryStatus": {
        "type": "string",
        "enum": [
          "DELIVERY_STARTED",
          "DELIVERY_PICK_UP_REACHED",
          "DELIVERY_PICK_UP_OK",
          "DELIVERY_PICK_UP_PARTIALLY",
          "DELIVERY_IN_PROGRESS",
          "DELIVERY_AT_DROP_OF_LOCATION",
          "DELIVERY_PICK_UP_FAILED",
          "DELIVERY_DELIVERED_WITH_CLAIM",
          "DELIVERY_CANCELLED_WITH_RETURN",
          "DELIVERY_FAILED_WITH_RETURN",
          "DELIVERY_RETURNED_TO_PICK_UP",
          "DELIVERY_DELIVERED_OK",
          "DELIVERY_DELIVERED_PARTIALLY",
          "DELIVERY_CANCELLED"
        ],
        "title": "Statuts de livraison (deliveryStatus)",
        "description": "Précise les différents statuts de livraison possible au sein de la plateforme. ",
        "x-examples": {
          "example": "DELIVERY_STARTED"
        }
      },
      "deltaCostReason": {
        "type": "string",
        "enum": [
          "DELTACOST_EXTEND_WAITING_WAREHOUSE",
          "DELTACOST_EXTEND_WAITING_CUSTOMER",
          "DELTACOST_WRONG_FLOOR",
          "DELTACOST_WRONG_CONTENT",
          "DELTACOST_WAREHOUSE_RETURN",
          "DELTACOST_LATE_CANCELLATION",
          "DELTACOST_PICKUP_FAILED",
          "DELTACOST_PARTIALLY_DELIVERED",
          "DELTACOST_UNKNOWN"
        ],
        "title": "Raison de deltaCost (deltaCostReason)",
        "x-examples": {
          "example": "DELTACOST_EXTEND_WAITING_WAREHOUSE"
        },
        "description": "Précise la raison transporteur pour la création d'un deltaCost. "
      },
      "length": {
        "required": [
          "value",
          "unit"
        ],
        "properties": {
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnits"
          }
        },
        "title": "Dimension (length)",
        "description": "Précise la dimension d'un colis.",
        "x-examples": {
          "example": {
            "value": 200,
            "unit": "mm"
          }
        }
      },
      "mass": {
        "required": [
          "value",
          "unit"
        ],
        "properties": {
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnits"
          }
        },
        "description": "Précise le poids d'un colis/produit.",
        "title": "Poids (mass)",
        "x-examples": {
          "example": {
            "value": 1,
            "unit": "kg"
          }
        }
      },
      "lengthUnits": {
        "type": "string",
        "enum": [
          "mm",
          "cm",
          "m",
          "km",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "description": "Précise l'unité de longueur.",
        "title": "Unité de longueur (lengthUnits)",
        "x-examples": {
          "example": "mm"
        }
      },
      "massUnits": {
        "type": "string",
        "enum": [
          "mcg",
          "mg",
          "g",
          "kg",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "description": "Précise l'unité de poids.",
        "title": "Unité de poids (massUnits)",
        "x-examples": {
          "example": "mcg"
        }
      },
      "postSubscriptionBasic": {
        "description": "Précise la manière de générer le Basic token de souscription.",
        "x-examples": {
          "example": {
            "basic": {
              "username": "string",
              "password": "string"
            }
          }
        },
        "title": "Token de souscription (postSubscriptionBasic)",
        "type": "object",
        "properties": {
          "basic": {
            "type": "object",
            "description": "A definir si la méthode d'authentification à l'API voulue est basic",
            "properties": {
              "username": {
                "type": "string",
                "description": "login de l'utilisateur utilisé pour la souscription"
              },
              "password": {
                "type": "string",
                "description": "Mot de passe de l'utilisateur pour la souscription"
              }
            },
            "required": [
              "username",
              "password"
            ]
          }
        }
      },
      "postSubscriptionOAuth2": {
        "properties": {
          "oauth2": {
            "type": "object",
            "description": "A definir si la méthode d'authentification à l'API voulue est oauth2",
            "required": [
              "client_id",
              "client_secret",
              "tokenEndPoint"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              },
              "audience": {
                "type": "string"
              },
              "grant_type": {
                "type": "string"
              },
              "tokenEndPoint": {
                "type": "string",
                "description": "Url permettant de recupérer le token d'accès en fonction du clientId et du clientSecret"
              }
            }
          }
        },
        "title": "Token de souscription (postSubscriptionOAuth2)",
        "description": "Précise la manière de générer le token de souscription OAuth2.",
        "x-examples": {
          "example": {
            "oauth2": {
              "client_id": "string",
              "client_secret": "string",
              "audience": "string",
              "grant_type": "string",
              "tokenEndPoint": "string"
            }
          }
        }
      },
      "postSubscriptionToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "object",
            "description": "A définir si la méthode d'authentification donne un bearer token à partir d'un username/password",
            "properties": {
              "username": {
                "type": "string",
                "description": "login de l'utilisateur utilisé pour la souscription"
              },
              "password": {
                "type": "string",
                "description": "Mot de passe de l'utilisateur pour la souscription"
              },
              "endpoint": {
                "type": "string",
                "description": "Url permettant de recupérer le token d'accès"
              }
            },
            "required": [
              "username",
              "password",
              "endpoint"
            ]
          }
        },
        "title": "Token de souscription (postSubscriptionToken)",
        "description": "Précise la manière de générer le Bearer token de souscription."
      },
      "team": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifiant de l'équipe en charge de la livraison"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "required": [
          "members"
        ],
        "description": "Précise l'équipe en charge de la livraison. ",
        "title": "Équipage (team)",
        "x-examples": {
          "example": {
            "members": [
              {
                "id": "012345"
              }
            ]
          }
        }
      },
      "vehicleType": {
        "type": "string",
        "enum": [
          "VEHICLE_TYPE_BIKE",
          "VEHICLE_TYPE_SCOOTER",
          "VEHICLE_TYPE_E_SCOOTER",
          "VEHICLE_TYPE_VAN_SMALL",
          "VEHICLE_TYPE_E_VAN_SMALL",
          "VEHICLE_TYPE_VAN_MEDIUM",
          "VEHICLE_TYPE_PEDESTRIAN",
          "VEHICLE_TYPE_TRUCK",
          "VEHICLE_TYPE_VAN_BIG",
          "VEHICLE_TYPE_E_VAN_BIG",
          "VEHICLE_TYPE_BIKE_CARGO",
          "VEHICLE_TYPE_CAR",
          "VEHICLE_TYPE_E_CAR",
          "VEHICLE_TYPE_UNKNOWN"
        ],
        "description": "Précise le type de véhicule utilisé lors de la livraison.",
        "title": "Type de véhicule (vehicleType)",
        "x-examples": {
          "example": "VEHICLE_TYPE_BIKE"
        }
      },
      "badRequest": {
        "type": "object",
        "description": "Elements manquants et/ou incorrect dans le body",
        "title": "Erreur 400",
        "x-examples": {
          "Exemple": {
            "reasons": [
              "Missing argument 'xxxxx'"
            ]
          }
        },
        "properties": {
          "reasons": {
            "type": "array",
            "description": "Indication sur l'erreur remontée",
            "items": {
              "type": "string",
              "example": "Missing argument 'xxxxx'"
            }
          }
        }
      }
    },
    "parameters": {
      "apiVersion": {
        "in": "header",
        "name": "x-api-version",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1.3.0"
        }
      },
      "pathDeliveryId": {
        "in": "path",
        "name": "deliveryId",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Id de livraison"
        }
      }
    },
    "securitySchemes": {
      "oAuth2ClientCredentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://last-mile.eu.auth0.com/oauth/token",
            "x-google-issuer": "https://last-mile.eu.auth0.com/",
            "x-google-jwks_uri": "https://last-mile.eu.auth0.com/.well-known/jwks.json",
            "x-google-audiences": "https://carrier.api.meltingpoint.fr/"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Livraison"
    },
    {
      "name": "Health"
    },
    {
      "name": "Document"
    },
    {
      "name": "Souscriptions"
    }
  ]
}