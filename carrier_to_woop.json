{
  "openapi": "3.0.2",
  "info": {
    "title": "Carrier to Woop",
    "description": "This document contains the technical information about Woop APIs for carriers. For any questions or clarifications, please contact the internal technical team.\n\nTo use Carrier to Woop APIs, you must use the confidential access codes provided when you created your carrier account on the platform.\n\nThe version currently available in the documentation is <b>Version 1.6.0</b>",
    "version": "1.6.0"
  },
  "servers": [
    {
      "url": "https://carrier.last-mile.fr",
      "description": "Production URL"
    },
    {
      "url": "https://car-api.preprod.gcp.last-mile.fr",
      "description": "Pre-production URL"
    },
    {
      "description": "Staging URL",
      "url": "https://car-api.recette.gcp.last-mile.fr"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Check whether the application is functioning.",
        "operationId": "getHealth",
        "responses": {
          "204": {
            "description": "The service is functioning"
          }
        },
        "security": [],
        "summary": "Health"
      }
    },
    "/deliveries/{deliveryId}/status": {
      "put": {
        "description": "Delivery or package status update",
        "operationId": "putDeliveryStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the new delivery status information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Delivery status"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime",
                    "description": "Status real datetime"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "parcelId": {
                    "type": "string",
                    "description": "Parcel identifier"
                  },
                  "team": {
                    "$ref": "#/components/schemas/team"
                  },
                  "additionalData": {
                    "$ref": "#/components/schemas/additionalData"
                  }
                },
                "required": [
                  "status",
                  "date",
                  "comment"
                ]
              },
              "examples": {
                "Update delivery status": {
                  "value": {
                    "status": "delivered",
                    "date": "2019-11-27T10:30:00+0000",
                    "comment": "I waited for 15 mins",
                    "team": {
                      "members": [
                        {
                          "id": "ZER784"
                        }
                      ]
                    },
                    "additionalData": [
                      {
                        "key": "my_personnal_key",
                        "value": "personal data"
                      }
                    ]
                  }
                },
                "Update parcel status": {
                  "value": {
                    "status": "pickup_ok",
                    "date": "2019-11-27T10:30:00+0000",
                    "comment": "Customer not present.",
                    "parcelId": "HBHGS19"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Status update of a delivery or a package",
        "tags": [
          "Delivery"
        ]
      }
    },
    "/deliveries/{deliveryId}/deltaCosts": {
      "put": {
        "tags": [
          "Delivery"
        ],
        "description": "Adding of extra costs for a delivery.",
        "operationId": "putDeliveryDeltaCosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains extra costs informations.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "taxExcludedAmount",
                  "reason",
                  "currency",
                  "date"
                ],
                "properties": {
                  "taxExcludedAmount": {
                    "type": "number",
                    "format": "float",
                    "description": "Excluded tax amount",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "taxIncludedAmount": {
                    "type": "number",
                    "format": "float",
                    "description": "Amount including tax",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "taxAmount": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax amount",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "reason": {
                    "$ref": "#/components/schemas/deltaCostReason"
                  },
                  "currency": {
                    "$ref": "#/components/schemas/currency"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime"
                  }
                }
              },
              "examples": {
                "Late cancellation": {
                  "value": {
                    "taxExcludedAmount": 18.18,
                    "taxIncludedAmount": 20,
                    "taxAmount": 1.82,
                    "currency": "EUR",
                    "reason": "DELTACOST_LATE_CANCELLATION",
                    "comment": "Order canceled 5 min before delivery.",
                    "date": "2019-11-27T10:30:00+0000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "Additional charges can no longer be sent"
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Adding extra cost to a delivery"
      }
    },
    "/deliveries/{deliveryId}/appointment": {
      "put": {
        "tags": [
          "Delivery"
        ],
        "description": "Appointment date update",
        "operationId": "putDeliveryAppointment",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains appointment information.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "appointment",
                  "date"
                ],
                "properties": {
                  "appointment": {
                    "$ref": "#/components/schemas/appointment"
                  },
                  "date": {
                    "type": "string",
                    "format": "datetime",
                    "description": "Datetime of this modification"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "parcelId": {
                    "type": "string",
                    "description": "Id du colis"
                  }
                }
              },
              "examples": {
                "Change appointment date for a delivery": {
                  "value": {
                    "appointment": {
                      "start": "2021-06-27T10:30:00+0000",
                      "end": "2021-06-27T11:30:00+0000"
                    },
                    "comment": "Absent customer",
                    "date": "2021-06-27T10:30:00+0000"
                  }
                },
                "Change appointment date for a parcel": {
                  "value": {
                    "appointment": {
                      "start": "2021-06-27T10:30:00+0000",
                      "end": "2021-06-27T11:30:00+0000"
                    },
                    "comment": "Absent customer",
                    "date": "2021-06-27T10:30:00+0000",
                    "parcelId": "HBHGS19"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "Additional charges can no longer be issued"
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Appointment date update"
      }
    },
    "/deliveries/{deliveryId}/stops": {
      "put": {
        "description": "Delivery stops update",
        "operationId": "putDeliveryStops",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the new delivery status information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "picking": {
                    "type": "object",
                    "description": "Picking information",
                    "properties": {
                      "stop": {
                        "$ref": "#/components/schemas/stopWithInterval"
                      }
                    }
                  },
                  "delivery": {
                    "type": "object",
                    "description": "Delivery Information",
                    "properties": {
                      "stop": {
                        "$ref": "#/components/schemas/stopWithInterval"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "picking": {
                      "stop": {
                        "references": {
                          "id": "123890654FRTTY"
                        },
                        "sequenceNumber": 7,
                        "route": {
                          "references": {
                            "id": "ZAESFHGTR567"
                          },
                          "sequenceNumber": 3,
                          "vehicle": {
                            "references": {
                              "id": "34689875434578",
                              "plateNumber": "ZE-678-HD"
                            },
                            "vehicleType": "VEHICLE_TYPE_BIKE"
                          },
                          "team": {
                            "members": [
                              {
                                "id": "AAA"
                              }
                            ]
                          }
                        },
                        "plannedInterval": {
                          "start": "2019-12-04T12:30:00+0000",
                          "end": "2019-12-04T14:30:00+0000"
                        }
                      }
                    },
                    "delivery": {
                      "stop": {
                        "references": {
                          "id": "123890654FRTTYZZ"
                        },
                        "sequenceNumber": 15,
                        "route": {
                          "references": {
                            "id": "ZAESFHGTR567"
                          },
                          "sequenceNumber": 3,
                          "vehicle": {
                            "references": {
                              "id": "34689875434578",
                              "plateNumber": "ZE-678-HD"
                            },
                            "vehicleType": "VEHICLE_TYPE_BIKE"
                          },
                          "team": {
                            "members": [
                              {
                                "id": "AAA"
                              }
                            ]
                          }
                        },
                        "plannedInterval": {
                          "start": "2019-12-04T16:30:00+0000",
                          "end": "2019-12-04T18:30:00+0000"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Stops update of a delivery",
        "tags": [
          "Delivery"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "deliveryId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/deliveries/{deliveryId}/closure": {
      "post": {
        "tags": [
          "Delivery"
        ],
        "description": "Adding billing information for a delivery.",
        "operationId": "postDeliveryClosure",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains billing information.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "emittedCarbonDioxide",
                  "billedDistance",
                  "vehicleType"
                ],
                "properties": {
                  "emittedCarbonDioxide": {
                    "$ref": "#/components/schemas/mass"
                  },
                  "billedDistance": {
                    "$ref": "#/components/schemas/length"
                  },
                  "vehicleType": {
                    "$ref": "#/components/schemas/vehicleType"
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "emittedCarbonDioxide": {
                      "value": 13.5,
                      "unit": "mg"
                    },
                    "billedDistance": {
                      "value": 5,
                      "unit": "km"
                    },
                    "vehicleType": "VEHICLE_TYPE_SCOOTER"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "Additional charges can no longer be issued"
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Adding billing information for a delivery"
      }
    },
    "/deliveries/{deliveryId}/events": {
      "post": {
        "tags": [
          "Delivery"
        ],
        "deprecated": true,
        "description": "Adding a delivery event.",
        "operationId": "postDeliveryEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the information of the notification sent.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "status",
                  "type",
                  "date",
                  "subject",
                  "message"
                ],
                "properties": {
                  "status": {
                    "type": "boolean",
                    "description": "'true' if the event is successful"
                  },
                  "type": {
                    "type": "string",
                    "description": "Notification type",
                    "enum": [
                      "EVENT_TYPE_SMS",
                      "EVENT_TYPE_MAIL",
                      "EVENT_TYPE_CALL"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "description": "Event time",
                    "format": "datetime"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Event subject",
                    "enum": [
                      "DELIVERY_INIT",
                      "DELIVERY_STARTED",
                      "DELIVERY_PICK_UP_REACHED",
                      "DELIVERY_PICK_UP_OK",
                      "DELIVERY_IN_PROGRESS",
                      "DELIVERY_AT_DROP_OF_LOCATION",
                      "DELIVERY_PICK_UP_FAILED",
                      "DELIVERY_DELIVERED_WITH_CLAIM",
                      "DELIVERY_CANCELLED_WITH_RETURN",
                      "DELIVERY_FAILED_WITH_RETURN",
                      "DELIVERY_RETURNED_TO_PICK_UP",
                      "DELIVERY_DELIVERED_OK",
                      "DELIVERY_CANCELLED"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Information message about the event"
                  },
                  "failReason": {
                    "type": "string",
                    "description": "Reason for event failure"
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "status": true,
                    "type": "EVENT_TYPE_SMS",
                    "date": "2019-11-27T10:30:00+0000",
                    "subject": "DELIVERY_INIT",
                    "message": "Hello, your order has been confirmed."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Adding a delivery event"
      }
    },
    "/subscriptions": {
      "post": {
        "description": "Endpoint for initiating exchanges with carrier APIs.",
        "operationId": "postSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains subscription information",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "callbacks": {
                    "type": "object",
                    "properties": {
                      "quote": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route for obtaining quotes"
                          },
                          "version": {
                            "type": "string",
                            "description": "Hello, your order has been confirmed.",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "delivery": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to validate a quote"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "cancelDelivery": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to cancel a delivery order"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "cancelQuote": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to cancel a quote"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "score": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to provide a rating for the carrier of an order"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "pickupPoint": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to provide the list of relay points"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "label": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to generate and retrieve a label"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to retrieve status by 'package'"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      },
                      "update": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the route to update a delivery order"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback (see woop to carrier)",
                            "example": "1.5.0"
                          },
                          "headers": {
                            "description": "Headers for this callback only",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "auth": {
                            "description": "Authentication for this callback only",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/postSubscriptionBasic"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionOAuth2"
                              },
                              {
                                "$ref": "#/components/schemas/postSubscriptionToken"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "adapter": {
                    "type": "string",
                    "description": "Allows you to indicate the name of the service used in LMMP to convert the data format of selected Carrier APIs.",
                    "example": "XMLAdapter"
                  },
                  "headers": {
                    "description": "Headers for all callbacks",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "auth": {
                    "description": "Authentication for all callbacks",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/postSubscriptionBasic"
                      },
                      {
                        "$ref": "#/components/schemas/postSubscriptionOAuth2"
                      },
                      {
                        "$ref": "#/components/schemas/postSubscriptionToken"
                      }
                    ]
                  }
                }
              },
              "examples": {
                "Basic": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.5.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.5.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.5.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.5.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.5.0"
                      }
                    },
                    "headers": [
                      {
                        "key": "x-api-key",
                        "value": "KHJKO8U9"
                      }
                    ],
                    "auth": {
                      "basic": {
                        "username": "admin",
                        "password": "1234"
                      }
                    }
                  }
                },
                "OAuth2": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.5.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.5.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.5.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.5.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.5.0"
                      },
                      "price": {
                        "url": "https://my_url/price",
                        "version": "1.5.0"
                      }
                    },
                    "auth": {
                      "oauth2": {
                        "client_id": "8664fb6e578be877cdd16e2c13e1db3e",
                        "client_secret": "4bb43097953c6d3ffae77b77f4716bba",
                        "audience": "carrier.last-mile.fr",
                        "grant_type": "client_credentials",
                        "tokenEndPoint": "token.last-mile.fr"
                      }
                    }
                  }
                },
                "Token": {
                  "value": {
                    "callbacks": {
                      "quote": {
                        "url": "https://my_url/quote",
                        "version": "1.5.0"
                      },
                      "delivery": {
                        "url": "https://my_url/delivery",
                        "version": "1.5.0"
                      },
                      "cancelDelivery": {
                        "url": "https://my_url/cancelDelivery",
                        "version": "1.5.0"
                      },
                      "cancelQuote": {
                        "url": "https://my_url/cancelQuote",
                        "version": "1.5.0"
                      },
                      "score": {
                        "url": "https://my_url/score",
                        "version": "1.5.0"
                      }
                    },
                    "auth": {
                      "token": {
                        "username": "admin",
                        "password": "1234",
                        "endpoint": "token.last-mile.fr"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          }
        },
        "summary": "Subscription management",
        "tags": [
          "Souscriptions"
        ]
      }
    },
    "/deliveries/{deliveryId}/documents": {
      "post": {
        "tags": [
          "Document"
        ],
        "description": "Adding a document and its information in form-data format.\n\n[See the documentation for more information](https://woop.stoplight.io/docs/carrier/docs/Basis/6.Delivery%20document.md)",
        "operationId": "postDeliveryDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathDeliveryId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the information for the document sent in form-data format.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "description": "The document in binary format, 10mb max",
                    "format": "binary"
                  },
                  "type": {
                    "type": "string",
                    "description": "Document type",
                    "enum": [
                      "EVIDENCE",
                      "INVOICE",
                      "CONTRACT"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "description": "Creation date of the document",
                    "format": "datetime"
                  }
                },
                "required": [
                  "document",
                  "type",
                  "date"
                ]
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "document": "<file stream>",
                    "type": "EVIDENCE",
                    "date": "2019-11-27T10:30:00+0000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "404": {
            "description": "The 'deliveryId' was not found"
          }
        },
        "summary": "Adding a delivery document"
      }
    },
    "/deliveries/{deliveryId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "45646fds-s4s44s-7e4e1d5d5"
          },
          "name": "deliveryId",
          "in": "path",
          "required": true,
          "description": "Identifier of the delivery to delete"
        }
      ],
      "delete": {
        "summary": "Delete a delivery",
        "tags": [
          "Delivery"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "You are not authorized to access this item."
          },
          "403": {
            "description": "Unable to delete this delivery (example: Delivery already deleted)"
          },
          "404": {
            "description": "Delivery not found"
          }
        },
        "operationId": "delete-deliveries-deliveryId",
        "description": "",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "1.5.0"
            },
            "in": "header",
            "name": "x-api-version"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "currency": {
        "type": "string",
        "enum": [
          "EUR"
        ],
        "title": "Currency (currency)",
        "description": "Currency, specifies the currency used.",
        "x-examples": {
          "example": "EUR"
        }
      },
      "deliveryStatus": {
        "type": "string",
        "enum": [
          "DELIVERY_STARTED",
          "DELIVERY_PICK_UP_REACHED",
          "DELIVERY_PICK_UP_OK",
          "DELIVERY_PICK_UP_PARTIALLY",
          "DELIVERY_IN_PROGRESS",
          "DELIVERY_AT_DROP_OF_LOCATION",
          "DELIVERY_PICK_UP_FAILED",
          "DELIVERY_DELIVERED_WITH_CLAIM",
          "DELIVERY_CANCELLED_WITH_RETURN",
          "DELIVERY_FAILED_WITH_RETURN",
          "DELIVERY_RETURNED_TO_PICK_UP",
          "DELIVERY_DELIVERED_OK",
          "DELIVERY_DELIVERED_PARTIALLY",
          "DELIVERY_CANCELLED",
          "DELIVERY_REPLANNED"
        ],
        "title": "Status of delivery (deliveryStatus)",
        "description": "Specifies the different delivery statuses available on the platform. ",
        "x-examples": {
          "example": "DELIVERY_STARTED"
        }
      },
      "deltaCostReason": {
        "type": "string",
        "enum": [
          "DELTACOST_EXTEND_WAITING_WAREHOUSE",
          "DELTACOST_EXTEND_WAITING_CUSTOMER",
          "DELTACOST_WRONG_FLOOR",
          "DELTACOST_WRONG_CONTENT",
          "DELTACOST_WAREHOUSE_RETURN",
          "DELTACOST_LATE_CANCELLATION",
          "DELTACOST_PICKUP_FAILED",
          "DELTACOST_PARTIALLY_DELIVERED",
          "DELTACOST_UNKNOWN"
        ],
        "title": "deltaCost reason (deltaCostReason)",
        "x-examples": {
          "example": "DELTACOST_EXTEND_WAITING_WAREHOUSE"
        },
        "description": "Specifies the carrier reason for creating a deltaCost. "
      },
      "length": {
        "required": [
          "value",
          "unit"
        ],
        "properties": {
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnits"
          }
        },
        "title": "Dimension (length)",
        "description": "Specifies the size of a package.",
        "x-examples": {
          "example": {
            "value": 200,
            "unit": "mm"
          }
        }
      },
      "mass": {
        "required": [
          "value",
          "unit"
        ],
        "properties": {
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnits"
          }
        },
        "description": "Specifies the weight of a package/product.",
        "title": "Weight (mass)",
        "x-examples": {
          "example": {
            "value": 1,
            "unit": "kg"
          }
        }
      },
      "lengthUnits": {
        "type": "string",
        "enum": [
          "mm",
          "cm",
          "m",
          "km",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "description": "Specifies the unit of length.",
        "title": "Unit of length (lengthUnits)",
        "x-examples": {
          "example": "mm"
        }
      },
      "massUnits": {
        "type": "string",
        "enum": [
          "mcg",
          "mg",
          "g",
          "kg",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "description": "Specifies the unit of weight.",
        "title": "Unit of weight (massUnits)",
        "x-examples": {
          "example": "mcg"
        }
      },
      "postSubscriptionBasic": {
        "description": "Specifies how to generate the Basic subscription token.",
        "x-examples": {
          "example": {
            "basic": {
              "username": "string",
              "password": "string"
            }
          }
        },
        "title": "Subscription token (postSubscriptionBasic)",
        "type": "object",
        "properties": {
          "basic": {
            "type": "object",
            "description": "To be defined if the required API authentication method is basic",
            "properties": {
              "username": {
                "type": "string",
                "description": "User login for the subscription"
              },
              "password": {
                "type": "string",
                "description": "User password for the subscription"
              }
            },
            "required": [
              "username",
              "password"
            ]
          }
        }
      },
      "postSubscriptionOAuth2": {
        "properties": {
          "oauth2": {
            "type": "object",
            "description": "To be defined if the required API authentication method is oauth2",
            "required": [
              "client_id",
              "client_secret",
              "tokenEndPoint"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              },
              "audience": {
                "type": "string"
              },
              "grant_type": {
                "type": "string"
              },
              "tokenEndPoint": {
                "type": "string",
                "description": "URL to retrieve the access token according to the clientId and the clientSecret"
              }
            }
          }
        },
        "title": "Subscription token (postSubscriptionOAuth2)",
        "description": "Specifies how to generate the OAuth2 subscription token.",
        "x-examples": {
          "example": {
            "oauth2": {
              "client_id": "string",
              "client_secret": "string",
              "audience": "string",
              "grant_type": "string",
              "tokenEndPoint": "string"
            }
          }
        }
      },
      "postSubscriptionToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "object",
            "description": "To be defined if the authentication method gives a bearer token from a username/password",
            "properties": {
              "username": {
                "type": "string",
                "description": "User login for the subscription"
              },
              "password": {
                "type": "string",
                "description": "User password for the subscription"
              },
              "endpoint": {
                "type": "string",
                "description": "URL to retrieve the access token"
              }
            },
            "required": [
              "username",
              "password",
              "endpoint"
            ]
          }
        },
        "title": "Subscription token (postSubscriptionBasic)",
        "description": "Specifies how to generate the Bearer subscription token."
      },
      "team": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier of the team managing the delivery"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "required": [
          "members"
        ],
        "description": "Specifies the team managing the delivery. ",
        "title": "Team (team)",
        "x-examples": {
          "example": {
            "members": [
              {
                "id": "012345"
              }
            ]
          }
        }
      },
      "vehicleType": {
        "type": "string",
        "enum": [
          "VEHICLE_TYPE_BIKE",
          "VEHICLE_TYPE_SCOOTER",
          "VEHICLE_TYPE_E_SCOOTER",
          "VEHICLE_TYPE_VAN_SMALL",
          "VEHICLE_TYPE_E_VAN_SMALL",
          "VEHICLE_TYPE_VAN_MEDIUM",
          "VEHICLE_TYPE_PEDESTRIAN",
          "VEHICLE_TYPE_TRUCK",
          "VEHICLE_TYPE_VAN_BIG",
          "VEHICLE_TYPE_E_VAN_BIG",
          "VEHICLE_TYPE_BIKE_CARGO",
          "VEHICLE_TYPE_CAR",
          "VEHICLE_TYPE_E_CAR",
          "VEHICLE_TYPE_UNKNOWN"
        ],
        "description": "Specifies the type of vehicle used for the delivery.",
        "title": "Vehicle type (vehicleType)",
        "x-examples": {
          "example": "VEHICLE_TYPE_BIKE"
        }
      },
      "badRequest": {
        "type": "object",
        "description": "Missing and/or incorrect items in the body",
        "title": "Error 400",
        "x-examples": {
          "Exemple": {
            "reasons": [
              "Missing argument 'xxxxx'"
            ]
          }
        },
        "properties": {
          "reasons": {
            "type": "array",
            "description": "Indication of the error returned",
            "items": {
              "type": "string",
              "example": "Missing argument 'xxxxx'"
            }
          }
        }
      },
      "additionalData": {
        "description": "Allows the carrier to transmit personalised information/data to the retailer. ",
        "type": "object",
        "x-examples": {
          "example": {
            "key": "string",
            "value": "string"
          }
        },
        "properties": {
          "key": {
            "type": "string",
            "description": "Title of the information transmitted"
          },
          "value": {
            "type": "string",
            "description": "Value of the information transmitted"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "title": "Additional data"
      },
      "appointment": {
        "description": "Specifies a range of dates and times for customer appointments.",
        "type": "object",
        "x-examples": {
          "example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        },
        "properties": {
          "start": {
            "type": "string",
            "minLength": 1,
            "description": "Start of the time slot"
          },
          "end": {
            "type": "string",
            "minLength": 1,
            "description": "End of the time slot"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "title": "Appointment date (appointment)"
      },
      "stopWithoutInterval": {
        "title": "stopWithoutInterval",
        "type": "object",
        "description": "Delivery stop information without planned interval",
        "x-examples": {
          "Example": {
            "references": {
              "id": "123890654FRTTY"
            },
            "sequenceNumber": 7,
            "route": {
              "references": {
                "id": "ZAESFHGTR567"
              },
              "sequenceNumber": 3,
              "vehicle": {
                "references": {
                  "id": "34689875434578",
                  "plateNumber": "ZE-678-HD"
                },
                "vehicleType": "VEHICLE_TYPE_BIKE"
              },
              "team": {
                "members": [
                  {
                    "id": "string"
                  }
                ]
              }
            }
          }
        },
        "properties": {
          "references": {
            "type": "object",
            "required": [
              "id"
            ],
            "description": "stop references",
            "properties": {
              "id": {
                "type": "string",
                "example": "123890654FRTTY",
                "description": "technical id for a stop in a route"
              }
            }
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Stop sequence number between all stops from one route (starting from 1)",
            "example": 7
          },
          "route": {
            "$ref": "#/components/schemas/route"
          }
        },
        "required": [
          "references"
        ]
      },
      "stopWithInterval": {
        "title": "stopWithInterval",
        "type": "object",
        "description": "Delivery stop information including planned interval",
        "x-examples": {
          "Example": {
            "references": {
              "id": "123890654FRTTY"
            },
            "sequenceNumber": 7,
            "route": {
              "references": {
                "id": "ZAESFHGTR567"
              },
              "sequenceNumber": 3,
              "vehicle": {
                "references": {
                  "id": "34689875434578",
                  "plateNumber": "ZE-678-HD"
                },
                "vehicleType": "VEHICLE_TYPE_BIKE"
              },
              "team": {
                "members": [
                  {
                    "id": "string"
                  }
                ]
              }
            },
            "plannedInterval": {
              "start": "2019-12-04T12:30:00+0000",
              "end": "2019-12-04T14:30:00+0000"
            }
          }
        },
        "properties": {
          "references": {
            "type": "object",
            "description": "stop references",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "example": "123890654FRTTY",
                "description": "technical id for a stop in a route"
              }
            }
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Stop sequence number between all stops from one route (starting from 1)",
            "example": 7
          },
          "route": {
            "$ref": "#/components/schemas/route"
          },
          "plannedInterval": {
            "$ref": "./woop_to_carrier.json#/components/schemas/interval"
          }
        },
        "required": [
          "references"
        ]
      },
      "route": {
        "title": "route",
        "type": "object",
        "description": "Delivery route information",
        "x-examples": {
          "Example": {
            "references": {
              "id": "ZAESFHGTR567"
            },
            "sequenceNumber": 3,
            "vehicle": {
              "references": {
                "id": "34689875434578",
                "plateNumber": "ZE-678-HD"
              },
              "vehicleType": "VEHICLE_TYPE_BIKE"
            },
            "team": {
              "members": [
                {
                  "id": "string"
                }
              ]
            }
          }
        },
        "properties": {
          "references": {
            "type": "object",
            "description": "route references",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "technical id for a route in a planning",
                "example": "ZAESFHGTR567"
              }
            }
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Route sequence number between all routes from one planning (starting from 1)",
            "example": 3
          },
          "vehicle": {
            "$ref": "#/components/schemas/vehicle"
          },
          "team": {
            "$ref": "#/components/schemas/team"
          }
        },
        "required": [
          "references"
        ]
      },
      "vehicle": {
        "title": "vehicle",
        "type": "object",
        "description": "Vehicle information",
        "x-examples": {
          "Example": {
            "references": {
              "id": "34689875434578",
              "plateNumber": "ZE-678-HD"
            },
            "vehicleType": "VEHICLE_TYPE_BIKE"
          }
        },
        "properties": {
          "references": {
            "type": "object",
            "description": "vehicle references",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "technical id for a vehicle",
                "example": "34689875434578"
              },
              "plateNumber": {
                "type": "string",
                "example": "ZE-678-HD",
                "description": "Vehicle plate number"
              }
            }
          },
          "vehicleType": {
            "$ref": "./woop_to_carrier.json#/components/schemas/vehicleType"
          }
        },
        "required": [
          "references"
        ]
      }
    },
    "parameters": {
      "apiVersion": {
        "in": "header",
        "name": "x-api-version",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1.5.0"
        }
      },
      "pathDeliveryId": {
        "in": "path",
        "name": "deliveryId",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Delivery ID"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {},
        "description": "[See documentation](https://woop.stoplight.io/docs/carrier/docs/Basis/2.Authentication.md)"
      }
    }
  },
  "tags": [
    {
      "name": "Delivery"
    },
    {
      "name": "Health"
    },
    {
      "name": "Document"
    },
    {
      "name": "Souscriptions"
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ]
}